// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_ss.proto

#include "game_ss.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_game_5fss_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fss_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SHeartBeat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fss_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fss_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_S2SNewServerAddGroupReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fss_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_S2SServerRegisterReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fss_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_S2SServerReportReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fss_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ServerReportInfo;
}  // namespace protobuf_game_5fss_2eproto
namespace SSMsg {
class JsonMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JsonMsg>
      _instance;
} _JsonMsg_default_instance_;
class SSPacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SSPacket>
      _instance;
} _SSPacket_default_instance_;
class ServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfo>
      _instance;
} _ServerInfo_default_instance_;
class ServerReportInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerReportInfo>
      _instance;
} _ServerReportInfo_default_instance_;
class S2SServerRegisterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SServerRegisterReq>
      _instance;
} _S2SServerRegisterReq_default_instance_;
class S2SServerReportReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SServerReportReq>
      _instance;
} _S2SServerReportReq_default_instance_;
class S2SHeartBeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SHeartBeat>
      _instance;
} _S2SHeartBeat_default_instance_;
class S2SNewServerAddGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNewServerAddGroupReq>
      _instance;
} _S2SNewServerAddGroupReq_default_instance_;
}  // namespace SSMsg
namespace protobuf_game_5fss_2eproto {
static void InitDefaultsJsonMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SSMsg::_JsonMsg_default_instance_;
    new (ptr) ::SSMsg::JsonMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SSMsg::JsonMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JsonMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJsonMsg}, {}};

static void InitDefaultsSSPacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SSMsg::_SSPacket_default_instance_;
    new (ptr) ::SSMsg::SSPacket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SSMsg::SSPacket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_SSPacket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsSSPacket}, {
      &protobuf_game_5fss_2eproto::scc_info_S2SServerRegisterReq.base,
      &protobuf_game_5fss_2eproto::scc_info_S2SServerReportReq.base,
      &protobuf_game_5fss_2eproto::scc_info_S2SHeartBeat.base,
      &protobuf_game_5fss_2eproto::scc_info_S2SNewServerAddGroupReq.base,}};

static void InitDefaultsServerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SSMsg::_ServerInfo_default_instance_;
    new (ptr) ::SSMsg::ServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SSMsg::ServerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerInfo}, {}};

static void InitDefaultsServerReportInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SSMsg::_ServerReportInfo_default_instance_;
    new (ptr) ::SSMsg::ServerReportInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SSMsg::ServerReportInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerReportInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerReportInfo}, {
      &protobuf_game_5fss_2eproto::scc_info_ServerInfo.base,}};

static void InitDefaultsS2SServerRegisterReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SSMsg::_S2SServerRegisterReq_default_instance_;
    new (ptr) ::SSMsg::S2SServerRegisterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SSMsg::S2SServerRegisterReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_S2SServerRegisterReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SServerRegisterReq}, {
      &protobuf_game_5fss_2eproto::scc_info_ServerInfo.base,}};

static void InitDefaultsS2SServerReportReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SSMsg::_S2SServerReportReq_default_instance_;
    new (ptr) ::SSMsg::S2SServerReportReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SSMsg::S2SServerReportReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_S2SServerReportReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SServerReportReq}, {
      &protobuf_game_5fss_2eproto::scc_info_ServerReportInfo.base,}};

static void InitDefaultsS2SHeartBeat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SSMsg::_S2SHeartBeat_default_instance_;
    new (ptr) ::SSMsg::S2SHeartBeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SSMsg::S2SHeartBeat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_S2SHeartBeat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SHeartBeat}, {}};

static void InitDefaultsS2SNewServerAddGroupReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SSMsg::_S2SNewServerAddGroupReq_default_instance_;
    new (ptr) ::SSMsg::S2SNewServerAddGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SSMsg::S2SNewServerAddGroupReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_S2SNewServerAddGroupReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SNewServerAddGroupReq}, {
      &protobuf_game_5fss_2eproto::scc_info_ServerInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_JsonMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SSPacket.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerReportInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SServerRegisterReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SServerReportReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SHeartBeat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNewServerAddGroupReq.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::JsonMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::JsonMsg, test_key1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::JsonMsg, test_key2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::SSPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::SSPacket, cmd_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::SSPacket, server_regist_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::SSPacket, server_report_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::SSPacket, heart_beat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::SSPacket, new_server_add_group_req_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, server_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, int_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, ext_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, int_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, ext_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, build_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, population_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, time_zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, allowed_security_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerInfo, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerReportInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerReportInfo, server_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::ServerReportInfo, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SServerRegisterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SServerRegisterReq, server_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SServerReportReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SServerReportReq, server_report_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SHeartBeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SHeartBeat, server_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SHeartBeat, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SHeartBeat, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SNewServerAddGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SSMsg::S2SNewServerAddGroupReq, server_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SSMsg::JsonMsg)},
  { 7, -1, sizeof(::SSMsg::SSPacket)},
  { 17, -1, sizeof(::SSMsg::ServerInfo)},
  { 35, -1, sizeof(::SSMsg::ServerReportInfo)},
  { 42, -1, sizeof(::SSMsg::S2SServerRegisterReq)},
  { 48, -1, sizeof(::SSMsg::S2SServerReportReq)},
  { 54, -1, sizeof(::SSMsg::S2SHeartBeat)},
  { 62, -1, sizeof(::SSMsg::S2SNewServerAddGroupReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::SSMsg::_JsonMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SSMsg::_SSPacket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SSMsg::_ServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SSMsg::_ServerReportInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SSMsg::_S2SServerRegisterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SSMsg::_S2SServerReportReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SSMsg::_S2SHeartBeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SSMsg::_S2SNewServerAddGroupReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "game_ss.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rgame_ss.proto\022\005SSMsg\"/\n\007JsonMsg\022\021\n\ttes"
      "t_key1\030\001 \001(\t\022\021\n\ttest_key2\030\002 \001(\t\"\363\001\n\010SSPa"
      "cket\022\016\n\006cmd_id\030\001 \001(\005\0226\n\021server_regist_re"
      "q\030\002 \001(\0132\033.SSMsg.S2SServerRegisterReq\0224\n\021"
      "server_report_req\030\003 \001(\0132\031.SSMsg.S2SServe"
      "rReportReq\022\'\n\nheart_beat\030\004 \001(\0132\023.SSMsg.S"
      "2SHeartBeat\022@\n\030new_server_add_group_req\030"
      "\005 \001(\0132\036.SSMsg.S2SNewServerAddGroupReq\"\376\001"
      "\n\nServerInfo\022\023\n\013server_type\030\001 \001(\005\022\021\n\tser"
      "ver_id\030\002 \001(\005\022\020\n\010int_port\030\003 \001(\005\022\020\n\010ext_po"
      "rt\030\004 \001(\005\022\016\n\006int_ip\030\005 \001(\t\022\016\n\006ext_ip\030\006 \001(\t"
      "\022\r\n\005build\030\007 \001(\005\022\030\n\020population_level\030\010 \001("
      "\002\022\014\n\004icon\030\t \001(\005\022\021\n\ttime_zone\030\n \001(\005\022\036\n\026al"
      "lowed_security_level\030\013 \001(\005\022\014\n\004flag\030\014 \001(\005"
      "\022\014\n\004name\030\r \001(\t\"I\n\020ServerReportInfo\022&\n\013se"
      "rver_info\030\001 \001(\0132\021.SSMsg.ServerInfo\022\r\n\005st"
      "ate\030\002 \001(\005\">\n\024S2SServerRegisterReq\022&\n\013ser"
      "ver_info\030\001 \001(\0132\021.SSMsg.ServerInfo\"I\n\022S2S"
      "ServerReportReq\0223\n\022server_report_info\030\001 "
      "\001(\0132\027.SSMsg.ServerReportInfo\"E\n\014S2SHeart"
      "Beat\022\023\n\013server_type\030\001 \001(\005\022\021\n\tserver_id\030\002"
      " \001(\005\022\r\n\005state\030\003 \001(\005\"A\n\027S2SNewServerAddGr"
      "oupReq\022&\n\013server_info\030\001 \003(\0132\021.SSMsg.Serv"
      "erInfo*\211\001\n\tSS_MSG_ID\022\014\n\010S2S_NONE\020\000\022\033\n\026S2"
      "S_SERVER_REGSTER_REQ\020\321\017\022\032\n\025S2S_SERVER_RE"
      "PORT_REQ\020\322\017\022\022\n\rS2S_HEARTBEAT\020\323\017\022!\n\034S2S_N"
      "EW_SERVER_ADD_GROUP_REQ\020\324\017b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1074);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_ss.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_game_5fss_2eproto
namespace SSMsg {
const ::google::protobuf::EnumDescriptor* SS_MSG_ID_descriptor() {
  protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_game_5fss_2eproto::file_level_enum_descriptors[0];
}
bool SS_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void JsonMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JsonMsg::kTestKey1FieldNumber;
const int JsonMsg::kTestKey2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JsonMsg::JsonMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fss_2eproto::scc_info_JsonMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSMsg.JsonMsg)
}
JsonMsg::JsonMsg(const JsonMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  test_key1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_key1().size() > 0) {
    test_key1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_key1_);
  }
  test_key2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_key2().size() > 0) {
    test_key2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_key2_);
  }
  // @@protoc_insertion_point(copy_constructor:SSMsg.JsonMsg)
}

void JsonMsg::SharedCtor() {
  test_key1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_key2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

JsonMsg::~JsonMsg() {
  // @@protoc_insertion_point(destructor:SSMsg.JsonMsg)
  SharedDtor();
}

void JsonMsg::SharedDtor() {
  test_key1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_key2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JsonMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JsonMsg::descriptor() {
  ::protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JsonMsg& JsonMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fss_2eproto::scc_info_JsonMsg.base);
  return *internal_default_instance();
}


void JsonMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSMsg.JsonMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  test_key1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_key2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool JsonMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSMsg.JsonMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string test_key1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_key1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_key1().data(), static_cast<int>(this->test_key1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SSMsg.JsonMsg.test_key1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_key2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_key2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_key2().data(), static_cast<int>(this->test_key2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SSMsg.JsonMsg.test_key2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSMsg.JsonMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSMsg.JsonMsg)
  return false;
#undef DO_
}

void JsonMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSMsg.JsonMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string test_key1 = 1;
  if (this->test_key1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_key1().data(), static_cast<int>(this->test_key1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.JsonMsg.test_key1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->test_key1(), output);
  }

  // string test_key2 = 2;
  if (this->test_key2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_key2().data(), static_cast<int>(this->test_key2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.JsonMsg.test_key2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->test_key2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SSMsg.JsonMsg)
}

::google::protobuf::uint8* JsonMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SSMsg.JsonMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string test_key1 = 1;
  if (this->test_key1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_key1().data(), static_cast<int>(this->test_key1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.JsonMsg.test_key1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test_key1(), target);
  }

  // string test_key2 = 2;
  if (this->test_key2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_key2().data(), static_cast<int>(this->test_key2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.JsonMsg.test_key2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->test_key2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSMsg.JsonMsg)
  return target;
}

size_t JsonMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSMsg.JsonMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string test_key1 = 1;
  if (this->test_key1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_key1());
  }

  // string test_key2 = 2;
  if (this->test_key2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_key2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JsonMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SSMsg.JsonMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const JsonMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JsonMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SSMsg.JsonMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SSMsg.JsonMsg)
    MergeFrom(*source);
  }
}

void JsonMsg::MergeFrom(const JsonMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SSMsg.JsonMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.test_key1().size() > 0) {

    test_key1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_key1_);
  }
  if (from.test_key2().size() > 0) {

    test_key2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_key2_);
  }
}

void JsonMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SSMsg.JsonMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JsonMsg::CopyFrom(const JsonMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSMsg.JsonMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonMsg::IsInitialized() const {
  return true;
}

void JsonMsg::Swap(JsonMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JsonMsg::InternalSwap(JsonMsg* other) {
  using std::swap;
  test_key1_.Swap(&other->test_key1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_key2_.Swap(&other->test_key2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JsonMsg::GetMetadata() const {
  protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SSPacket::InitAsDefaultInstance() {
  ::SSMsg::_SSPacket_default_instance_._instance.get_mutable()->server_regist_req_ = const_cast< ::SSMsg::S2SServerRegisterReq*>(
      ::SSMsg::S2SServerRegisterReq::internal_default_instance());
  ::SSMsg::_SSPacket_default_instance_._instance.get_mutable()->server_report_req_ = const_cast< ::SSMsg::S2SServerReportReq*>(
      ::SSMsg::S2SServerReportReq::internal_default_instance());
  ::SSMsg::_SSPacket_default_instance_._instance.get_mutable()->heart_beat_ = const_cast< ::SSMsg::S2SHeartBeat*>(
      ::SSMsg::S2SHeartBeat::internal_default_instance());
  ::SSMsg::_SSPacket_default_instance_._instance.get_mutable()->new_server_add_group_req_ = const_cast< ::SSMsg::S2SNewServerAddGroupReq*>(
      ::SSMsg::S2SNewServerAddGroupReq::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSPacket::kCmdIdFieldNumber;
const int SSPacket::kServerRegistReqFieldNumber;
const int SSPacket::kServerReportReqFieldNumber;
const int SSPacket::kHeartBeatFieldNumber;
const int SSPacket::kNewServerAddGroupReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSPacket::SSPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fss_2eproto::scc_info_SSPacket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSMsg.SSPacket)
}
SSPacket::SSPacket(const SSPacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server_regist_req()) {
    server_regist_req_ = new ::SSMsg::S2SServerRegisterReq(*from.server_regist_req_);
  } else {
    server_regist_req_ = NULL;
  }
  if (from.has_server_report_req()) {
    server_report_req_ = new ::SSMsg::S2SServerReportReq(*from.server_report_req_);
  } else {
    server_report_req_ = NULL;
  }
  if (from.has_heart_beat()) {
    heart_beat_ = new ::SSMsg::S2SHeartBeat(*from.heart_beat_);
  } else {
    heart_beat_ = NULL;
  }
  if (from.has_new_server_add_group_req()) {
    new_server_add_group_req_ = new ::SSMsg::S2SNewServerAddGroupReq(*from.new_server_add_group_req_);
  } else {
    new_server_add_group_req_ = NULL;
  }
  cmd_id_ = from.cmd_id_;
  // @@protoc_insertion_point(copy_constructor:SSMsg.SSPacket)
}

void SSPacket::SharedCtor() {
  ::memset(&server_regist_req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmd_id_) -
      reinterpret_cast<char*>(&server_regist_req_)) + sizeof(cmd_id_));
}

SSPacket::~SSPacket() {
  // @@protoc_insertion_point(destructor:SSMsg.SSPacket)
  SharedDtor();
}

void SSPacket::SharedDtor() {
  if (this != internal_default_instance()) delete server_regist_req_;
  if (this != internal_default_instance()) delete server_report_req_;
  if (this != internal_default_instance()) delete heart_beat_;
  if (this != internal_default_instance()) delete new_server_add_group_req_;
}

void SSPacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SSPacket::descriptor() {
  ::protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SSPacket& SSPacket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fss_2eproto::scc_info_SSPacket.base);
  return *internal_default_instance();
}


void SSPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:SSMsg.SSPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && server_regist_req_ != NULL) {
    delete server_regist_req_;
  }
  server_regist_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && server_report_req_ != NULL) {
    delete server_report_req_;
  }
  server_report_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && heart_beat_ != NULL) {
    delete heart_beat_;
  }
  heart_beat_ = NULL;
  if (GetArenaNoVirtual() == NULL && new_server_add_group_req_ != NULL) {
    delete new_server_add_group_req_;
  }
  new_server_add_group_req_ = NULL;
  cmd_id_ = 0;
  _internal_metadata_.Clear();
}

bool SSPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSMsg.SSPacket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 cmd_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SSMsg.S2SServerRegisterReq server_regist_req = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_regist_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SSMsg.S2SServerReportReq server_report_req = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_report_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SSMsg.S2SHeartBeat heart_beat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_heart_beat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SSMsg.S2SNewServerAddGroupReq new_server_add_group_req = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_server_add_group_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSMsg.SSPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSMsg.SSPacket)
  return false;
#undef DO_
}

void SSPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSMsg.SSPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd_id(), output);
  }

  // .SSMsg.S2SServerRegisterReq server_regist_req = 2;
  if (this->has_server_regist_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_server_regist_req(), output);
  }

  // .SSMsg.S2SServerReportReq server_report_req = 3;
  if (this->has_server_report_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_server_report_req(), output);
  }

  // .SSMsg.S2SHeartBeat heart_beat = 4;
  if (this->has_heart_beat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_heart_beat(), output);
  }

  // .SSMsg.S2SNewServerAddGroupReq new_server_add_group_req = 5;
  if (this->has_new_server_add_group_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_new_server_add_group_req(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SSMsg.SSPacket)
}

::google::protobuf::uint8* SSPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SSMsg.SSPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd_id(), target);
  }

  // .SSMsg.S2SServerRegisterReq server_regist_req = 2;
  if (this->has_server_regist_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_server_regist_req(), deterministic, target);
  }

  // .SSMsg.S2SServerReportReq server_report_req = 3;
  if (this->has_server_report_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_server_report_req(), deterministic, target);
  }

  // .SSMsg.S2SHeartBeat heart_beat = 4;
  if (this->has_heart_beat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_heart_beat(), deterministic, target);
  }

  // .SSMsg.S2SNewServerAddGroupReq new_server_add_group_req = 5;
  if (this->has_new_server_add_group_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_new_server_add_group_req(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSMsg.SSPacket)
  return target;
}

size_t SSPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSMsg.SSPacket)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .SSMsg.S2SServerRegisterReq server_regist_req = 2;
  if (this->has_server_regist_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_regist_req_);
  }

  // .SSMsg.S2SServerReportReq server_report_req = 3;
  if (this->has_server_report_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_report_req_);
  }

  // .SSMsg.S2SHeartBeat heart_beat = 4;
  if (this->has_heart_beat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *heart_beat_);
  }

  // .SSMsg.S2SNewServerAddGroupReq new_server_add_group_req = 5;
  if (this->has_new_server_add_group_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *new_server_add_group_req_);
  }

  // int32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SSMsg.SSPacket)
  GOOGLE_DCHECK_NE(&from, this);
  const SSPacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SSPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SSMsg.SSPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SSMsg.SSPacket)
    MergeFrom(*source);
  }
}

void SSPacket::MergeFrom(const SSPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SSMsg.SSPacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server_regist_req()) {
    mutable_server_regist_req()->::SSMsg::S2SServerRegisterReq::MergeFrom(from.server_regist_req());
  }
  if (from.has_server_report_req()) {
    mutable_server_report_req()->::SSMsg::S2SServerReportReq::MergeFrom(from.server_report_req());
  }
  if (from.has_heart_beat()) {
    mutable_heart_beat()->::SSMsg::S2SHeartBeat::MergeFrom(from.heart_beat());
  }
  if (from.has_new_server_add_group_req()) {
    mutable_new_server_add_group_req()->::SSMsg::S2SNewServerAddGroupReq::MergeFrom(from.new_server_add_group_req());
  }
  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
}

void SSPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SSMsg.SSPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSPacket::CopyFrom(const SSPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSMsg.SSPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSPacket::IsInitialized() const {
  return true;
}

void SSPacket::Swap(SSPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSPacket::InternalSwap(SSPacket* other) {
  using std::swap;
  swap(server_regist_req_, other->server_regist_req_);
  swap(server_report_req_, other->server_report_req_);
  swap(heart_beat_, other->heart_beat_);
  swap(new_server_add_group_req_, other->new_server_add_group_req_);
  swap(cmd_id_, other->cmd_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SSPacket::GetMetadata() const {
  protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfo::kServerTypeFieldNumber;
const int ServerInfo::kServerIdFieldNumber;
const int ServerInfo::kIntPortFieldNumber;
const int ServerInfo::kExtPortFieldNumber;
const int ServerInfo::kIntIpFieldNumber;
const int ServerInfo::kExtIpFieldNumber;
const int ServerInfo::kBuildFieldNumber;
const int ServerInfo::kPopulationLevelFieldNumber;
const int ServerInfo::kIconFieldNumber;
const int ServerInfo::kTimeZoneFieldNumber;
const int ServerInfo::kAllowedSecurityLevelFieldNumber;
const int ServerInfo::kFlagFieldNumber;
const int ServerInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfo::ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fss_2eproto::scc_info_ServerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSMsg.ServerInfo)
}
ServerInfo::ServerInfo(const ServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  int_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.int_ip().size() > 0) {
    int_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.int_ip_);
  }
  ext_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ext_ip().size() > 0) {
    ext_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ext_ip_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&server_type_, &from.server_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&server_type_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:SSMsg.ServerInfo)
}

void ServerInfo::SharedCtor() {
  int_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ext_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&server_type_)) + sizeof(flag_));
}

ServerInfo::~ServerInfo() {
  // @@protoc_insertion_point(destructor:SSMsg.ServerInfo)
  SharedDtor();
}

void ServerInfo::SharedDtor() {
  int_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ext_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerInfo::descriptor() {
  ::protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfo& ServerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fss_2eproto::scc_info_ServerInfo.base);
  return *internal_default_instance();
}


void ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SSMsg.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ext_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&server_type_)) + sizeof(flag_));
  _internal_metadata_.Clear();
}

bool ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSMsg.ServerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 server_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ext_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ext_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string int_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_int_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->int_ip().data(), static_cast<int>(this->int_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SSMsg.ServerInfo.int_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ext_ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ext_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ext_ip().data(), static_cast<int>(this->ext_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SSMsg.ServerInfo.ext_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 build = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &build_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float population_level = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &population_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 icon = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 time_zone = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_zone_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 allowed_security_level = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &allowed_security_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flag = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SSMsg.ServerInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSMsg.ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSMsg.ServerInfo)
  return false;
#undef DO_
}

void ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSMsg.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 server_type = 1;
  if (this->server_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->server_type(), output);
  }

  // int32 server_id = 2;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->server_id(), output);
  }

  // int32 int_port = 3;
  if (this->int_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->int_port(), output);
  }

  // int32 ext_port = 4;
  if (this->ext_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ext_port(), output);
  }

  // string int_ip = 5;
  if (this->int_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->int_ip().data(), static_cast<int>(this->int_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.ServerInfo.int_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->int_ip(), output);
  }

  // string ext_ip = 6;
  if (this->ext_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ext_ip().data(), static_cast<int>(this->ext_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.ServerInfo.ext_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->ext_ip(), output);
  }

  // int32 build = 7;
  if (this->build() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->build(), output);
  }

  // float population_level = 8;
  if (this->population_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->population_level(), output);
  }

  // int32 icon = 9;
  if (this->icon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->icon(), output);
  }

  // int32 time_zone = 10;
  if (this->time_zone() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->time_zone(), output);
  }

  // int32 allowed_security_level = 11;
  if (this->allowed_security_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->allowed_security_level(), output);
  }

  // int32 flag = 12;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->flag(), output);
  }

  // string name = 13;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.ServerInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SSMsg.ServerInfo)
}

::google::protobuf::uint8* ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SSMsg.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 server_type = 1;
  if (this->server_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->server_type(), target);
  }

  // int32 server_id = 2;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->server_id(), target);
  }

  // int32 int_port = 3;
  if (this->int_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->int_port(), target);
  }

  // int32 ext_port = 4;
  if (this->ext_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ext_port(), target);
  }

  // string int_ip = 5;
  if (this->int_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->int_ip().data(), static_cast<int>(this->int_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.ServerInfo.int_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->int_ip(), target);
  }

  // string ext_ip = 6;
  if (this->ext_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ext_ip().data(), static_cast<int>(this->ext_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.ServerInfo.ext_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->ext_ip(), target);
  }

  // int32 build = 7;
  if (this->build() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->build(), target);
  }

  // float population_level = 8;
  if (this->population_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->population_level(), target);
  }

  // int32 icon = 9;
  if (this->icon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->icon(), target);
  }

  // int32 time_zone = 10;
  if (this->time_zone() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->time_zone(), target);
  }

  // int32 allowed_security_level = 11;
  if (this->allowed_security_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->allowed_security_level(), target);
  }

  // int32 flag = 12;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->flag(), target);
  }

  // string name = 13;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SSMsg.ServerInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSMsg.ServerInfo)
  return target;
}

size_t ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSMsg.ServerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string int_ip = 5;
  if (this->int_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->int_ip());
  }

  // string ext_ip = 6;
  if (this->ext_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ext_ip());
  }

  // string name = 13;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 server_type = 1;
  if (this->server_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_type());
  }

  // int32 server_id = 2;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  // int32 int_port = 3;
  if (this->int_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int_port());
  }

  // int32 ext_port = 4;
  if (this->ext_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ext_port());
  }

  // int32 build = 7;
  if (this->build() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->build());
  }

  // float population_level = 8;
  if (this->population_level() != 0) {
    total_size += 1 + 4;
  }

  // int32 icon = 9;
  if (this->icon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->icon());
  }

  // int32 time_zone = 10;
  if (this->time_zone() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time_zone());
  }

  // int32 allowed_security_level = 11;
  if (this->allowed_security_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->allowed_security_level());
  }

  // int32 flag = 12;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SSMsg.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SSMsg.ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SSMsg.ServerInfo)
    MergeFrom(*source);
  }
}

void ServerInfo::MergeFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SSMsg.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.int_ip().size() > 0) {

    int_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.int_ip_);
  }
  if (from.ext_ip().size() > 0) {

    ext_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ext_ip_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.server_type() != 0) {
    set_server_type(from.server_type());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
  if (from.int_port() != 0) {
    set_int_port(from.int_port());
  }
  if (from.ext_port() != 0) {
    set_ext_port(from.ext_port());
  }
  if (from.build() != 0) {
    set_build(from.build());
  }
  if (from.population_level() != 0) {
    set_population_level(from.population_level());
  }
  if (from.icon() != 0) {
    set_icon(from.icon());
  }
  if (from.time_zone() != 0) {
    set_time_zone(from.time_zone());
  }
  if (from.allowed_security_level() != 0) {
    set_allowed_security_level(from.allowed_security_level());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SSMsg.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfo::CopyFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSMsg.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfo::IsInitialized() const {
  return true;
}

void ServerInfo::Swap(ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfo::InternalSwap(ServerInfo* other) {
  using std::swap;
  int_ip_.Swap(&other->int_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ext_ip_.Swap(&other->ext_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(server_type_, other->server_type_);
  swap(server_id_, other->server_id_);
  swap(int_port_, other->int_port_);
  swap(ext_port_, other->ext_port_);
  swap(build_, other->build_);
  swap(population_level_, other->population_level_);
  swap(icon_, other->icon_);
  swap(time_zone_, other->time_zone_);
  swap(allowed_security_level_, other->allowed_security_level_);
  swap(flag_, other->flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerInfo::GetMetadata() const {
  protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerReportInfo::InitAsDefaultInstance() {
  ::SSMsg::_ServerReportInfo_default_instance_._instance.get_mutable()->server_info_ = const_cast< ::SSMsg::ServerInfo*>(
      ::SSMsg::ServerInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerReportInfo::kServerInfoFieldNumber;
const int ServerReportInfo::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerReportInfo::ServerReportInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fss_2eproto::scc_info_ServerReportInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSMsg.ServerReportInfo)
}
ServerReportInfo::ServerReportInfo(const ServerReportInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server_info()) {
    server_info_ = new ::SSMsg::ServerInfo(*from.server_info_);
  } else {
    server_info_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:SSMsg.ServerReportInfo)
}

void ServerReportInfo::SharedCtor() {
  ::memset(&server_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&server_info_)) + sizeof(state_));
}

ServerReportInfo::~ServerReportInfo() {
  // @@protoc_insertion_point(destructor:SSMsg.ServerReportInfo)
  SharedDtor();
}

void ServerReportInfo::SharedDtor() {
  if (this != internal_default_instance()) delete server_info_;
}

void ServerReportInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerReportInfo::descriptor() {
  ::protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerReportInfo& ServerReportInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fss_2eproto::scc_info_ServerReportInfo.base);
  return *internal_default_instance();
}


void ServerReportInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SSMsg.ServerReportInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && server_info_ != NULL) {
    delete server_info_;
  }
  server_info_ = NULL;
  state_ = 0;
  _internal_metadata_.Clear();
}

bool ServerReportInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSMsg.ServerReportInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SSMsg.ServerInfo server_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSMsg.ServerReportInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSMsg.ServerReportInfo)
  return false;
#undef DO_
}

void ServerReportInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSMsg.ServerReportInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SSMsg.ServerInfo server_info = 1;
  if (this->has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_server_info(), output);
  }

  // int32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SSMsg.ServerReportInfo)
}

::google::protobuf::uint8* ServerReportInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SSMsg.ServerReportInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SSMsg.ServerInfo server_info = 1;
  if (this->has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_server_info(), deterministic, target);
  }

  // int32 state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSMsg.ServerReportInfo)
  return target;
}

size_t ServerReportInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSMsg.ServerReportInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .SSMsg.ServerInfo server_info = 1;
  if (this->has_server_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_info_);
  }

  // int32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerReportInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SSMsg.ServerReportInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerReportInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerReportInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SSMsg.ServerReportInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SSMsg.ServerReportInfo)
    MergeFrom(*source);
  }
}

void ServerReportInfo::MergeFrom(const ServerReportInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SSMsg.ServerReportInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server_info()) {
    mutable_server_info()->::SSMsg::ServerInfo::MergeFrom(from.server_info());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void ServerReportInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SSMsg.ServerReportInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerReportInfo::CopyFrom(const ServerReportInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSMsg.ServerReportInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReportInfo::IsInitialized() const {
  return true;
}

void ServerReportInfo::Swap(ServerReportInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerReportInfo::InternalSwap(ServerReportInfo* other) {
  using std::swap;
  swap(server_info_, other->server_info_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerReportInfo::GetMetadata() const {
  protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SServerRegisterReq::InitAsDefaultInstance() {
  ::SSMsg::_S2SServerRegisterReq_default_instance_._instance.get_mutable()->server_info_ = const_cast< ::SSMsg::ServerInfo*>(
      ::SSMsg::ServerInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SServerRegisterReq::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SServerRegisterReq::S2SServerRegisterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fss_2eproto::scc_info_S2SServerRegisterReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSMsg.S2SServerRegisterReq)
}
S2SServerRegisterReq::S2SServerRegisterReq(const S2SServerRegisterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server_info()) {
    server_info_ = new ::SSMsg::ServerInfo(*from.server_info_);
  } else {
    server_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SSMsg.S2SServerRegisterReq)
}

void S2SServerRegisterReq::SharedCtor() {
  server_info_ = NULL;
}

S2SServerRegisterReq::~S2SServerRegisterReq() {
  // @@protoc_insertion_point(destructor:SSMsg.S2SServerRegisterReq)
  SharedDtor();
}

void S2SServerRegisterReq::SharedDtor() {
  if (this != internal_default_instance()) delete server_info_;
}

void S2SServerRegisterReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SServerRegisterReq::descriptor() {
  ::protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SServerRegisterReq& S2SServerRegisterReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fss_2eproto::scc_info_S2SServerRegisterReq.base);
  return *internal_default_instance();
}


void S2SServerRegisterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SSMsg.S2SServerRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && server_info_ != NULL) {
    delete server_info_;
  }
  server_info_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SServerRegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSMsg.S2SServerRegisterReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SSMsg.ServerInfo server_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSMsg.S2SServerRegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSMsg.S2SServerRegisterReq)
  return false;
#undef DO_
}

void S2SServerRegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSMsg.S2SServerRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SSMsg.ServerInfo server_info = 1;
  if (this->has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_server_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SSMsg.S2SServerRegisterReq)
}

::google::protobuf::uint8* S2SServerRegisterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SSMsg.S2SServerRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SSMsg.ServerInfo server_info = 1;
  if (this->has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_server_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSMsg.S2SServerRegisterReq)
  return target;
}

size_t S2SServerRegisterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSMsg.S2SServerRegisterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .SSMsg.ServerInfo server_info = 1;
  if (this->has_server_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SServerRegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SSMsg.S2SServerRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SServerRegisterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SServerRegisterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SSMsg.S2SServerRegisterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SSMsg.S2SServerRegisterReq)
    MergeFrom(*source);
  }
}

void S2SServerRegisterReq::MergeFrom(const S2SServerRegisterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SSMsg.S2SServerRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server_info()) {
    mutable_server_info()->::SSMsg::ServerInfo::MergeFrom(from.server_info());
  }
}

void S2SServerRegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SSMsg.S2SServerRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SServerRegisterReq::CopyFrom(const S2SServerRegisterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSMsg.S2SServerRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SServerRegisterReq::IsInitialized() const {
  return true;
}

void S2SServerRegisterReq::Swap(S2SServerRegisterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SServerRegisterReq::InternalSwap(S2SServerRegisterReq* other) {
  using std::swap;
  swap(server_info_, other->server_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SServerRegisterReq::GetMetadata() const {
  protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SServerReportReq::InitAsDefaultInstance() {
  ::SSMsg::_S2SServerReportReq_default_instance_._instance.get_mutable()->server_report_info_ = const_cast< ::SSMsg::ServerReportInfo*>(
      ::SSMsg::ServerReportInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SServerReportReq::kServerReportInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SServerReportReq::S2SServerReportReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fss_2eproto::scc_info_S2SServerReportReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSMsg.S2SServerReportReq)
}
S2SServerReportReq::S2SServerReportReq(const S2SServerReportReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server_report_info()) {
    server_report_info_ = new ::SSMsg::ServerReportInfo(*from.server_report_info_);
  } else {
    server_report_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SSMsg.S2SServerReportReq)
}

void S2SServerReportReq::SharedCtor() {
  server_report_info_ = NULL;
}

S2SServerReportReq::~S2SServerReportReq() {
  // @@protoc_insertion_point(destructor:SSMsg.S2SServerReportReq)
  SharedDtor();
}

void S2SServerReportReq::SharedDtor() {
  if (this != internal_default_instance()) delete server_report_info_;
}

void S2SServerReportReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SServerReportReq::descriptor() {
  ::protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SServerReportReq& S2SServerReportReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fss_2eproto::scc_info_S2SServerReportReq.base);
  return *internal_default_instance();
}


void S2SServerReportReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SSMsg.S2SServerReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && server_report_info_ != NULL) {
    delete server_report_info_;
  }
  server_report_info_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SServerReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSMsg.S2SServerReportReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SSMsg.ServerReportInfo server_report_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_report_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSMsg.S2SServerReportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSMsg.S2SServerReportReq)
  return false;
#undef DO_
}

void S2SServerReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSMsg.S2SServerReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SSMsg.ServerReportInfo server_report_info = 1;
  if (this->has_server_report_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_server_report_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SSMsg.S2SServerReportReq)
}

::google::protobuf::uint8* S2SServerReportReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SSMsg.S2SServerReportReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SSMsg.ServerReportInfo server_report_info = 1;
  if (this->has_server_report_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_server_report_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSMsg.S2SServerReportReq)
  return target;
}

size_t S2SServerReportReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSMsg.S2SServerReportReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .SSMsg.ServerReportInfo server_report_info = 1;
  if (this->has_server_report_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_report_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SServerReportReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SSMsg.S2SServerReportReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SServerReportReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SServerReportReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SSMsg.S2SServerReportReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SSMsg.S2SServerReportReq)
    MergeFrom(*source);
  }
}

void S2SServerReportReq::MergeFrom(const S2SServerReportReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SSMsg.S2SServerReportReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server_report_info()) {
    mutable_server_report_info()->::SSMsg::ServerReportInfo::MergeFrom(from.server_report_info());
  }
}

void S2SServerReportReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SSMsg.S2SServerReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SServerReportReq::CopyFrom(const S2SServerReportReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSMsg.S2SServerReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SServerReportReq::IsInitialized() const {
  return true;
}

void S2SServerReportReq::Swap(S2SServerReportReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SServerReportReq::InternalSwap(S2SServerReportReq* other) {
  using std::swap;
  swap(server_report_info_, other->server_report_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SServerReportReq::GetMetadata() const {
  protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SHeartBeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SHeartBeat::kServerTypeFieldNumber;
const int S2SHeartBeat::kServerIdFieldNumber;
const int S2SHeartBeat::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SHeartBeat::S2SHeartBeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fss_2eproto::scc_info_S2SHeartBeat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSMsg.S2SHeartBeat)
}
S2SHeartBeat::S2SHeartBeat(const S2SHeartBeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_type_, &from.server_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&server_type_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:SSMsg.S2SHeartBeat)
}

void S2SHeartBeat::SharedCtor() {
  ::memset(&server_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&server_type_)) + sizeof(state_));
}

S2SHeartBeat::~S2SHeartBeat() {
  // @@protoc_insertion_point(destructor:SSMsg.S2SHeartBeat)
  SharedDtor();
}

void S2SHeartBeat::SharedDtor() {
}

void S2SHeartBeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SHeartBeat::descriptor() {
  ::protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SHeartBeat& S2SHeartBeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fss_2eproto::scc_info_S2SHeartBeat.base);
  return *internal_default_instance();
}


void S2SHeartBeat::Clear() {
// @@protoc_insertion_point(message_clear_start:SSMsg.S2SHeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&server_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&server_type_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool S2SHeartBeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSMsg.S2SHeartBeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 server_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSMsg.S2SHeartBeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSMsg.S2SHeartBeat)
  return false;
#undef DO_
}

void S2SHeartBeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSMsg.S2SHeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 server_type = 1;
  if (this->server_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->server_type(), output);
  }

  // int32 server_id = 2;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->server_id(), output);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SSMsg.S2SHeartBeat)
}

::google::protobuf::uint8* S2SHeartBeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SSMsg.S2SHeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 server_type = 1;
  if (this->server_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->server_type(), target);
  }

  // int32 server_id = 2;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->server_id(), target);
  }

  // int32 state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSMsg.S2SHeartBeat)
  return target;
}

size_t S2SHeartBeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSMsg.S2SHeartBeat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 server_type = 1;
  if (this->server_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_type());
  }

  // int32 server_id = 2;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  // int32 state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SHeartBeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SSMsg.S2SHeartBeat)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SHeartBeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SHeartBeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SSMsg.S2SHeartBeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SSMsg.S2SHeartBeat)
    MergeFrom(*source);
  }
}

void S2SHeartBeat::MergeFrom(const S2SHeartBeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SSMsg.S2SHeartBeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_type() != 0) {
    set_server_type(from.server_type());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void S2SHeartBeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SSMsg.S2SHeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SHeartBeat::CopyFrom(const S2SHeartBeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSMsg.S2SHeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SHeartBeat::IsInitialized() const {
  return true;
}

void S2SHeartBeat::Swap(S2SHeartBeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SHeartBeat::InternalSwap(S2SHeartBeat* other) {
  using std::swap;
  swap(server_type_, other->server_type_);
  swap(server_id_, other->server_id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SHeartBeat::GetMetadata() const {
  protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNewServerAddGroupReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNewServerAddGroupReq::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNewServerAddGroupReq::S2SNewServerAddGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fss_2eproto::scc_info_S2SNewServerAddGroupReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SSMsg.S2SNewServerAddGroupReq)
}
S2SNewServerAddGroupReq::S2SNewServerAddGroupReq(const S2SNewServerAddGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      server_info_(from.server_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SSMsg.S2SNewServerAddGroupReq)
}

void S2SNewServerAddGroupReq::SharedCtor() {
}

S2SNewServerAddGroupReq::~S2SNewServerAddGroupReq() {
  // @@protoc_insertion_point(destructor:SSMsg.S2SNewServerAddGroupReq)
  SharedDtor();
}

void S2SNewServerAddGroupReq::SharedDtor() {
}

void S2SNewServerAddGroupReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNewServerAddGroupReq::descriptor() {
  ::protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNewServerAddGroupReq& S2SNewServerAddGroupReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fss_2eproto::scc_info_S2SNewServerAddGroupReq.base);
  return *internal_default_instance();
}


void S2SNewServerAddGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SSMsg.S2SNewServerAddGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_info_.Clear();
  _internal_metadata_.Clear();
}

bool S2SNewServerAddGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SSMsg.S2SNewServerAddGroupReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SSMsg.ServerInfo server_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_server_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SSMsg.S2SNewServerAddGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SSMsg.S2SNewServerAddGroupReq)
  return false;
#undef DO_
}

void S2SNewServerAddGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SSMsg.S2SNewServerAddGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SSMsg.ServerInfo server_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->server_info(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SSMsg.S2SNewServerAddGroupReq)
}

::google::protobuf::uint8* S2SNewServerAddGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SSMsg.S2SNewServerAddGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SSMsg.ServerInfo server_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->server_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSMsg.S2SNewServerAddGroupReq)
  return target;
}

size_t S2SNewServerAddGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSMsg.S2SNewServerAddGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SSMsg.ServerInfo server_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->server_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->server_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNewServerAddGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SSMsg.S2SNewServerAddGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNewServerAddGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNewServerAddGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SSMsg.S2SNewServerAddGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SSMsg.S2SNewServerAddGroupReq)
    MergeFrom(*source);
  }
}

void S2SNewServerAddGroupReq::MergeFrom(const S2SNewServerAddGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SSMsg.S2SNewServerAddGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_info_.MergeFrom(from.server_info_);
}

void S2SNewServerAddGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SSMsg.S2SNewServerAddGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNewServerAddGroupReq::CopyFrom(const S2SNewServerAddGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSMsg.S2SNewServerAddGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNewServerAddGroupReq::IsInitialized() const {
  return true;
}

void S2SNewServerAddGroupReq::Swap(S2SNewServerAddGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNewServerAddGroupReq::InternalSwap(S2SNewServerAddGroupReq* other) {
  using std::swap;
  CastToBase(&server_info_)->InternalSwap(CastToBase(&other->server_info_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNewServerAddGroupReq::GetMetadata() const {
  protobuf_game_5fss_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fss_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace SSMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SSMsg::JsonMsg* Arena::CreateMaybeMessage< ::SSMsg::JsonMsg >(Arena* arena) {
  return Arena::CreateInternal< ::SSMsg::JsonMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SSMsg::SSPacket* Arena::CreateMaybeMessage< ::SSMsg::SSPacket >(Arena* arena) {
  return Arena::CreateInternal< ::SSMsg::SSPacket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SSMsg::ServerInfo* Arena::CreateMaybeMessage< ::SSMsg::ServerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::SSMsg::ServerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SSMsg::ServerReportInfo* Arena::CreateMaybeMessage< ::SSMsg::ServerReportInfo >(Arena* arena) {
  return Arena::CreateInternal< ::SSMsg::ServerReportInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SSMsg::S2SServerRegisterReq* Arena::CreateMaybeMessage< ::SSMsg::S2SServerRegisterReq >(Arena* arena) {
  return Arena::CreateInternal< ::SSMsg::S2SServerRegisterReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SSMsg::S2SServerReportReq* Arena::CreateMaybeMessage< ::SSMsg::S2SServerReportReq >(Arena* arena) {
  return Arena::CreateInternal< ::SSMsg::S2SServerReportReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SSMsg::S2SHeartBeat* Arena::CreateMaybeMessage< ::SSMsg::S2SHeartBeat >(Arena* arena) {
  return Arena::CreateInternal< ::SSMsg::S2SHeartBeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SSMsg::S2SNewServerAddGroupReq* Arena::CreateMaybeMessage< ::SSMsg::S2SNewServerAddGroupReq >(Arena* arena) {
  return Arena::CreateInternal< ::SSMsg::S2SNewServerAddGroupReq >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
