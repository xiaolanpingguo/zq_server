// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_db_object.proto

#ifndef PROTOBUF_INCLUDED_game_5fdb_5fobject_2eproto
#define PROTOBUF_INCLUDED_game_5fdb_5fobject_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto 

namespace protobuf_game_5fdb_5fobject_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_game_5fdb_5fobject_2eproto
namespace DBObject {
class DBObjectInfo;
class DBObjectInfoDefaultTypeInternal;
extern DBObjectInfoDefaultTypeInternal _DBObjectInfo_default_instance_;
class DBPropertyDouble;
class DBPropertyDoubleDefaultTypeInternal;
extern DBPropertyDoubleDefaultTypeInternal _DBPropertyDouble_default_instance_;
class DBPropertyDouble_MapDoubleEntry_DoNotUse;
class DBPropertyDouble_MapDoubleEntry_DoNotUseDefaultTypeInternal;
extern DBPropertyDouble_MapDoubleEntry_DoNotUseDefaultTypeInternal _DBPropertyDouble_MapDoubleEntry_DoNotUse_default_instance_;
class DBPropertyFloat;
class DBPropertyFloatDefaultTypeInternal;
extern DBPropertyFloatDefaultTypeInternal _DBPropertyFloat_default_instance_;
class DBPropertyFloat_MapFloatEntry_DoNotUse;
class DBPropertyFloat_MapFloatEntry_DoNotUseDefaultTypeInternal;
extern DBPropertyFloat_MapFloatEntry_DoNotUseDefaultTypeInternal _DBPropertyFloat_MapFloatEntry_DoNotUse_default_instance_;
class DBPropertyInt32;
class DBPropertyInt32DefaultTypeInternal;
extern DBPropertyInt32DefaultTypeInternal _DBPropertyInt32_default_instance_;
class DBPropertyInt32_MapInt32Entry_DoNotUse;
class DBPropertyInt32_MapInt32Entry_DoNotUseDefaultTypeInternal;
extern DBPropertyInt32_MapInt32Entry_DoNotUseDefaultTypeInternal _DBPropertyInt32_MapInt32Entry_DoNotUse_default_instance_;
class DBPropertyInt64;
class DBPropertyInt64DefaultTypeInternal;
extern DBPropertyInt64DefaultTypeInternal _DBPropertyInt64_default_instance_;
class DBPropertyInt64_MapInt64Entry_DoNotUse;
class DBPropertyInt64_MapInt64Entry_DoNotUseDefaultTypeInternal;
extern DBPropertyInt64_MapInt64Entry_DoNotUseDefaultTypeInternal _DBPropertyInt64_MapInt64Entry_DoNotUse_default_instance_;
class DBPropertyString;
class DBPropertyStringDefaultTypeInternal;
extern DBPropertyStringDefaultTypeInternal _DBPropertyString_default_instance_;
class DBPropertyString_MapStringEntry_DoNotUse;
class DBPropertyString_MapStringEntry_DoNotUseDefaultTypeInternal;
extern DBPropertyString_MapStringEntry_DoNotUseDefaultTypeInternal _DBPropertyString_MapStringEntry_DoNotUse_default_instance_;
class DBPropertyUint64;
class DBPropertyUint64DefaultTypeInternal;
extern DBPropertyUint64DefaultTypeInternal _DBPropertyUint64_default_instance_;
class DBPropertyUint64_MapUint64Entry_DoNotUse;
class DBPropertyUint64_MapUint64Entry_DoNotUseDefaultTypeInternal;
extern DBPropertyUint64_MapUint64Entry_DoNotUseDefaultTypeInternal _DBPropertyUint64_MapUint64Entry_DoNotUse_default_instance_;
class DBRoleInfo;
class DBRoleInfoDefaultTypeInternal;
extern DBRoleInfoDefaultTypeInternal _DBRoleInfo_default_instance_;
class DBRoleList;
class DBRoleListDefaultTypeInternal;
extern DBRoleListDefaultTypeInternal _DBRoleList_default_instance_;
class DBRoleList_RoleMapEntry_DoNotUse;
class DBRoleList_RoleMapEntry_DoNotUseDefaultTypeInternal;
extern DBRoleList_RoleMapEntry_DoNotUseDefaultTypeInternal _DBRoleList_RoleMapEntry_DoNotUse_default_instance_;
}  // namespace DBObject
namespace google {
namespace protobuf {
template<> ::DBObject::DBObjectInfo* Arena::CreateMaybeMessage<::DBObject::DBObjectInfo>(Arena*);
template<> ::DBObject::DBPropertyDouble* Arena::CreateMaybeMessage<::DBObject::DBPropertyDouble>(Arena*);
template<> ::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse* Arena::CreateMaybeMessage<::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse>(Arena*);
template<> ::DBObject::DBPropertyFloat* Arena::CreateMaybeMessage<::DBObject::DBPropertyFloat>(Arena*);
template<> ::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse* Arena::CreateMaybeMessage<::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse>(Arena*);
template<> ::DBObject::DBPropertyInt32* Arena::CreateMaybeMessage<::DBObject::DBPropertyInt32>(Arena*);
template<> ::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse* Arena::CreateMaybeMessage<::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse>(Arena*);
template<> ::DBObject::DBPropertyInt64* Arena::CreateMaybeMessage<::DBObject::DBPropertyInt64>(Arena*);
template<> ::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse* Arena::CreateMaybeMessage<::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse>(Arena*);
template<> ::DBObject::DBPropertyString* Arena::CreateMaybeMessage<::DBObject::DBPropertyString>(Arena*);
template<> ::DBObject::DBPropertyString_MapStringEntry_DoNotUse* Arena::CreateMaybeMessage<::DBObject::DBPropertyString_MapStringEntry_DoNotUse>(Arena*);
template<> ::DBObject::DBPropertyUint64* Arena::CreateMaybeMessage<::DBObject::DBPropertyUint64>(Arena*);
template<> ::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse* Arena::CreateMaybeMessage<::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse>(Arena*);
template<> ::DBObject::DBRoleInfo* Arena::CreateMaybeMessage<::DBObject::DBRoleInfo>(Arena*);
template<> ::DBObject::DBRoleList* Arena::CreateMaybeMessage<::DBObject::DBRoleList>(Arena*);
template<> ::DBObject::DBRoleList_RoleMapEntry_DoNotUse* Arena::CreateMaybeMessage<::DBObject::DBRoleList_RoleMapEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace DBObject {

// ===================================================================

class DBPropertyInt32_MapInt32Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<DBPropertyInt32_MapInt32Entry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DBPropertyInt32_MapInt32Entry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > SuperType;
  DBPropertyInt32_MapInt32Entry_DoNotUse();
  DBPropertyInt32_MapInt32Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DBPropertyInt32_MapInt32Entry_DoNotUse& other);
  static const DBPropertyInt32_MapInt32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DBPropertyInt32_MapInt32Entry_DoNotUse*>(&_DBPropertyInt32_MapInt32Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DBPropertyInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBObject.DBPropertyInt32) */ {
 public:
  DBPropertyInt32();
  virtual ~DBPropertyInt32();

  DBPropertyInt32(const DBPropertyInt32& from);

  inline DBPropertyInt32& operator=(const DBPropertyInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DBPropertyInt32(DBPropertyInt32&& from) noexcept
    : DBPropertyInt32() {
    *this = ::std::move(from);
  }

  inline DBPropertyInt32& operator=(DBPropertyInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DBPropertyInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPropertyInt32* internal_default_instance() {
    return reinterpret_cast<const DBPropertyInt32*>(
               &_DBPropertyInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DBPropertyInt32* other);
  friend void swap(DBPropertyInt32& a, DBPropertyInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DBPropertyInt32* New() const final {
    return CreateMaybeMessage<DBPropertyInt32>(NULL);
  }

  DBPropertyInt32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DBPropertyInt32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DBPropertyInt32& from);
  void MergeFrom(const DBPropertyInt32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPropertyInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, int32> map_int32 = 1;
  int map_int32_size() const;
  void clear_map_int32();
  static const int kMapInt32FieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      map_int32() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_map_int32();

  // @@protoc_insertion_point(class_scope:DBObject.DBPropertyInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DBPropertyInt32_MapInt32Entry_DoNotUse,
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > map_int32_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_game_5fdb_5fobject_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBPropertyInt64_MapInt64Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<DBPropertyInt64_MapInt64Entry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::int64,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DBPropertyInt64_MapInt64Entry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::int64,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    0 > SuperType;
  DBPropertyInt64_MapInt64Entry_DoNotUse();
  DBPropertyInt64_MapInt64Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DBPropertyInt64_MapInt64Entry_DoNotUse& other);
  static const DBPropertyInt64_MapInt64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DBPropertyInt64_MapInt64Entry_DoNotUse*>(&_DBPropertyInt64_MapInt64Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DBPropertyInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBObject.DBPropertyInt64) */ {
 public:
  DBPropertyInt64();
  virtual ~DBPropertyInt64();

  DBPropertyInt64(const DBPropertyInt64& from);

  inline DBPropertyInt64& operator=(const DBPropertyInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DBPropertyInt64(DBPropertyInt64&& from) noexcept
    : DBPropertyInt64() {
    *this = ::std::move(from);
  }

  inline DBPropertyInt64& operator=(DBPropertyInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DBPropertyInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPropertyInt64* internal_default_instance() {
    return reinterpret_cast<const DBPropertyInt64*>(
               &_DBPropertyInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DBPropertyInt64* other);
  friend void swap(DBPropertyInt64& a, DBPropertyInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DBPropertyInt64* New() const final {
    return CreateMaybeMessage<DBPropertyInt64>(NULL);
  }

  DBPropertyInt64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DBPropertyInt64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DBPropertyInt64& from);
  void MergeFrom(const DBPropertyInt64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPropertyInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, int64> map_int64 = 1;
  int map_int64_size() const;
  void clear_map_int64();
  static const int kMapInt64FieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
      map_int64() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
      mutable_map_int64();

  // @@protoc_insertion_point(class_scope:DBObject.DBPropertyInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DBPropertyInt64_MapInt64Entry_DoNotUse,
      ::google::protobuf::int32, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > map_int64_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_game_5fdb_5fobject_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBPropertyUint64_MapUint64Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<DBPropertyUint64_MapUint64Entry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DBPropertyUint64_MapUint64Entry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > SuperType;
  DBPropertyUint64_MapUint64Entry_DoNotUse();
  DBPropertyUint64_MapUint64Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DBPropertyUint64_MapUint64Entry_DoNotUse& other);
  static const DBPropertyUint64_MapUint64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DBPropertyUint64_MapUint64Entry_DoNotUse*>(&_DBPropertyUint64_MapUint64Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DBPropertyUint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBObject.DBPropertyUint64) */ {
 public:
  DBPropertyUint64();
  virtual ~DBPropertyUint64();

  DBPropertyUint64(const DBPropertyUint64& from);

  inline DBPropertyUint64& operator=(const DBPropertyUint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DBPropertyUint64(DBPropertyUint64&& from) noexcept
    : DBPropertyUint64() {
    *this = ::std::move(from);
  }

  inline DBPropertyUint64& operator=(DBPropertyUint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DBPropertyUint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPropertyUint64* internal_default_instance() {
    return reinterpret_cast<const DBPropertyUint64*>(
               &_DBPropertyUint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DBPropertyUint64* other);
  friend void swap(DBPropertyUint64& a, DBPropertyUint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DBPropertyUint64* New() const final {
    return CreateMaybeMessage<DBPropertyUint64>(NULL);
  }

  DBPropertyUint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DBPropertyUint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DBPropertyUint64& from);
  void MergeFrom(const DBPropertyUint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPropertyUint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, uint64> map_uint64 = 1;
  int map_uint64_size() const;
  void clear_map_uint64();
  static const int kMapUint64FieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >&
      map_uint64() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >*
      mutable_map_uint64();

  // @@protoc_insertion_point(class_scope:DBObject.DBPropertyUint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DBPropertyUint64_MapUint64Entry_DoNotUse,
      ::google::protobuf::int32, ::google::protobuf::uint64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      0 > map_uint64_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_game_5fdb_5fobject_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBPropertyFloat_MapFloatEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DBPropertyFloat_MapFloatEntry_DoNotUse, 
    ::google::protobuf::int32, float,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DBPropertyFloat_MapFloatEntry_DoNotUse, 
    ::google::protobuf::int32, float,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
    0 > SuperType;
  DBPropertyFloat_MapFloatEntry_DoNotUse();
  DBPropertyFloat_MapFloatEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DBPropertyFloat_MapFloatEntry_DoNotUse& other);
  static const DBPropertyFloat_MapFloatEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DBPropertyFloat_MapFloatEntry_DoNotUse*>(&_DBPropertyFloat_MapFloatEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DBPropertyFloat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBObject.DBPropertyFloat) */ {
 public:
  DBPropertyFloat();
  virtual ~DBPropertyFloat();

  DBPropertyFloat(const DBPropertyFloat& from);

  inline DBPropertyFloat& operator=(const DBPropertyFloat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DBPropertyFloat(DBPropertyFloat&& from) noexcept
    : DBPropertyFloat() {
    *this = ::std::move(from);
  }

  inline DBPropertyFloat& operator=(DBPropertyFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DBPropertyFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPropertyFloat* internal_default_instance() {
    return reinterpret_cast<const DBPropertyFloat*>(
               &_DBPropertyFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DBPropertyFloat* other);
  friend void swap(DBPropertyFloat& a, DBPropertyFloat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DBPropertyFloat* New() const final {
    return CreateMaybeMessage<DBPropertyFloat>(NULL);
  }

  DBPropertyFloat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DBPropertyFloat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DBPropertyFloat& from);
  void MergeFrom(const DBPropertyFloat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPropertyFloat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, float> map_float = 1;
  int map_float_size() const;
  void clear_map_float();
  static const int kMapFloatFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, float >&
      map_float() const;
  ::google::protobuf::Map< ::google::protobuf::int32, float >*
      mutable_map_float();

  // @@protoc_insertion_point(class_scope:DBObject.DBPropertyFloat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DBPropertyFloat_MapFloatEntry_DoNotUse,
      ::google::protobuf::int32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > map_float_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_game_5fdb_5fobject_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBPropertyDouble_MapDoubleEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DBPropertyDouble_MapDoubleEntry_DoNotUse, 
    ::google::protobuf::int32, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DBPropertyDouble_MapDoubleEntry_DoNotUse, 
    ::google::protobuf::int32, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > SuperType;
  DBPropertyDouble_MapDoubleEntry_DoNotUse();
  DBPropertyDouble_MapDoubleEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DBPropertyDouble_MapDoubleEntry_DoNotUse& other);
  static const DBPropertyDouble_MapDoubleEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DBPropertyDouble_MapDoubleEntry_DoNotUse*>(&_DBPropertyDouble_MapDoubleEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DBPropertyDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBObject.DBPropertyDouble) */ {
 public:
  DBPropertyDouble();
  virtual ~DBPropertyDouble();

  DBPropertyDouble(const DBPropertyDouble& from);

  inline DBPropertyDouble& operator=(const DBPropertyDouble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DBPropertyDouble(DBPropertyDouble&& from) noexcept
    : DBPropertyDouble() {
    *this = ::std::move(from);
  }

  inline DBPropertyDouble& operator=(DBPropertyDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DBPropertyDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPropertyDouble* internal_default_instance() {
    return reinterpret_cast<const DBPropertyDouble*>(
               &_DBPropertyDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(DBPropertyDouble* other);
  friend void swap(DBPropertyDouble& a, DBPropertyDouble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DBPropertyDouble* New() const final {
    return CreateMaybeMessage<DBPropertyDouble>(NULL);
  }

  DBPropertyDouble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DBPropertyDouble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DBPropertyDouble& from);
  void MergeFrom(const DBPropertyDouble& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPropertyDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, double> map_double = 1;
  int map_double_size() const;
  void clear_map_double();
  static const int kMapDoubleFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, double >&
      map_double() const;
  ::google::protobuf::Map< ::google::protobuf::int32, double >*
      mutable_map_double();

  // @@protoc_insertion_point(class_scope:DBObject.DBPropertyDouble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DBPropertyDouble_MapDoubleEntry_DoNotUse,
      ::google::protobuf::int32, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > map_double_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_game_5fdb_5fobject_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBPropertyString_MapStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DBPropertyString_MapStringEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DBPropertyString_MapStringEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  DBPropertyString_MapStringEntry_DoNotUse();
  DBPropertyString_MapStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DBPropertyString_MapStringEntry_DoNotUse& other);
  static const DBPropertyString_MapStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DBPropertyString_MapStringEntry_DoNotUse*>(&_DBPropertyString_MapStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DBPropertyString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBObject.DBPropertyString) */ {
 public:
  DBPropertyString();
  virtual ~DBPropertyString();

  DBPropertyString(const DBPropertyString& from);

  inline DBPropertyString& operator=(const DBPropertyString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DBPropertyString(DBPropertyString&& from) noexcept
    : DBPropertyString() {
    *this = ::std::move(from);
  }

  inline DBPropertyString& operator=(DBPropertyString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DBPropertyString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPropertyString* internal_default_instance() {
    return reinterpret_cast<const DBPropertyString*>(
               &_DBPropertyString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DBPropertyString* other);
  friend void swap(DBPropertyString& a, DBPropertyString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DBPropertyString* New() const final {
    return CreateMaybeMessage<DBPropertyString>(NULL);
  }

  DBPropertyString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DBPropertyString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DBPropertyString& from);
  void MergeFrom(const DBPropertyString& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPropertyString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, string> map_string = 1;
  int map_string_size() const;
  void clear_map_string();
  static const int kMapStringFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      map_string() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_map_string();

  // @@protoc_insertion_point(class_scope:DBObject.DBPropertyString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DBPropertyString_MapStringEntry_DoNotUse,
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map_string_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_game_5fdb_5fobject_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBObjectInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBObject.DBObjectInfo) */ {
 public:
  DBObjectInfo();
  virtual ~DBObjectInfo();

  DBObjectInfo(const DBObjectInfo& from);

  inline DBObjectInfo& operator=(const DBObjectInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DBObjectInfo(DBObjectInfo&& from) noexcept
    : DBObjectInfo() {
    *this = ::std::move(from);
  }

  inline DBObjectInfo& operator=(DBObjectInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DBObjectInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBObjectInfo* internal_default_instance() {
    return reinterpret_cast<const DBObjectInfo*>(
               &_DBObjectInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(DBObjectInfo* other);
  friend void swap(DBObjectInfo& a, DBObjectInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DBObjectInfo* New() const final {
    return CreateMaybeMessage<DBObjectInfo>(NULL);
  }

  DBObjectInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DBObjectInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DBObjectInfo& from);
  void MergeFrom(const DBObjectInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBObjectInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .DBObject.DBPropertyInt32 property_int32 = 1;
  bool has_property_int32() const;
  void clear_property_int32();
  static const int kPropertyInt32FieldNumber = 1;
  private:
  const ::DBObject::DBPropertyInt32& _internal_property_int32() const;
  public:
  const ::DBObject::DBPropertyInt32& property_int32() const;
  ::DBObject::DBPropertyInt32* release_property_int32();
  ::DBObject::DBPropertyInt32* mutable_property_int32();
  void set_allocated_property_int32(::DBObject::DBPropertyInt32* property_int32);

  // .DBObject.DBPropertyInt64 property_int64 = 2;
  bool has_property_int64() const;
  void clear_property_int64();
  static const int kPropertyInt64FieldNumber = 2;
  private:
  const ::DBObject::DBPropertyInt64& _internal_property_int64() const;
  public:
  const ::DBObject::DBPropertyInt64& property_int64() const;
  ::DBObject::DBPropertyInt64* release_property_int64();
  ::DBObject::DBPropertyInt64* mutable_property_int64();
  void set_allocated_property_int64(::DBObject::DBPropertyInt64* property_int64);

  // .DBObject.DBPropertyUint64 property_uint64 = 3;
  bool has_property_uint64() const;
  void clear_property_uint64();
  static const int kPropertyUint64FieldNumber = 3;
  private:
  const ::DBObject::DBPropertyUint64& _internal_property_uint64() const;
  public:
  const ::DBObject::DBPropertyUint64& property_uint64() const;
  ::DBObject::DBPropertyUint64* release_property_uint64();
  ::DBObject::DBPropertyUint64* mutable_property_uint64();
  void set_allocated_property_uint64(::DBObject::DBPropertyUint64* property_uint64);

  // .DBObject.DBPropertyFloat property_float = 4;
  bool has_property_float() const;
  void clear_property_float();
  static const int kPropertyFloatFieldNumber = 4;
  private:
  const ::DBObject::DBPropertyFloat& _internal_property_float() const;
  public:
  const ::DBObject::DBPropertyFloat& property_float() const;
  ::DBObject::DBPropertyFloat* release_property_float();
  ::DBObject::DBPropertyFloat* mutable_property_float();
  void set_allocated_property_float(::DBObject::DBPropertyFloat* property_float);

  // .DBObject.DBPropertyDouble property_double = 5;
  bool has_property_double() const;
  void clear_property_double();
  static const int kPropertyDoubleFieldNumber = 5;
  private:
  const ::DBObject::DBPropertyDouble& _internal_property_double() const;
  public:
  const ::DBObject::DBPropertyDouble& property_double() const;
  ::DBObject::DBPropertyDouble* release_property_double();
  ::DBObject::DBPropertyDouble* mutable_property_double();
  void set_allocated_property_double(::DBObject::DBPropertyDouble* property_double);

  // .DBObject.DBPropertyString property_string = 6;
  bool has_property_string() const;
  void clear_property_string();
  static const int kPropertyStringFieldNumber = 6;
  private:
  const ::DBObject::DBPropertyString& _internal_property_string() const;
  public:
  const ::DBObject::DBPropertyString& property_string() const;
  ::DBObject::DBPropertyString* release_property_string();
  ::DBObject::DBPropertyString* mutable_property_string();
  void set_allocated_property_string(::DBObject::DBPropertyString* property_string);

  // @@protoc_insertion_point(class_scope:DBObject.DBObjectInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::DBObject::DBPropertyInt32* property_int32_;
  ::DBObject::DBPropertyInt64* property_int64_;
  ::DBObject::DBPropertyUint64* property_uint64_;
  ::DBObject::DBPropertyFloat* property_float_;
  ::DBObject::DBPropertyDouble* property_double_;
  ::DBObject::DBPropertyString* property_string_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_game_5fdb_5fobject_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBRoleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBObject.DBRoleInfo) */ {
 public:
  DBRoleInfo();
  virtual ~DBRoleInfo();

  DBRoleInfo(const DBRoleInfo& from);

  inline DBRoleInfo& operator=(const DBRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DBRoleInfo(DBRoleInfo&& from) noexcept
    : DBRoleInfo() {
    *this = ::std::move(from);
  }

  inline DBRoleInfo& operator=(DBRoleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DBRoleInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBRoleInfo* internal_default_instance() {
    return reinterpret_cast<const DBRoleInfo*>(
               &_DBRoleInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(DBRoleInfo* other);
  friend void swap(DBRoleInfo& a, DBRoleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DBRoleInfo* New() const final {
    return CreateMaybeMessage<DBRoleInfo>(NULL);
  }

  DBRoleInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DBRoleInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DBRoleInfo& from);
  void MergeFrom(const DBRoleInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBRoleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string role_name = 1;
  void clear_role_name();
  static const int kRoleNameFieldNumber = 1;
  const ::std::string& role_name() const;
  void set_role_name(const ::std::string& value);
  #if LANG_CXX11
  void set_role_name(::std::string&& value);
  #endif
  void set_role_name(const char* value);
  void set_role_name(const char* value, size_t size);
  ::std::string* mutable_role_name();
  ::std::string* release_role_name();
  void set_allocated_role_name(::std::string* role_name);

  // @@protoc_insertion_point(class_scope:DBObject.DBRoleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr role_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_game_5fdb_5fobject_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBRoleList_RoleMapEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DBRoleList_RoleMapEntry_DoNotUse, 
    ::std::string, ::DBObject::DBRoleInfo,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DBRoleList_RoleMapEntry_DoNotUse, 
    ::std::string, ::DBObject::DBRoleInfo,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  DBRoleList_RoleMapEntry_DoNotUse();
  DBRoleList_RoleMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DBRoleList_RoleMapEntry_DoNotUse& other);
  static const DBRoleList_RoleMapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DBRoleList_RoleMapEntry_DoNotUse*>(&_DBRoleList_RoleMapEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DBRoleList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBObject.DBRoleList) */ {
 public:
  DBRoleList();
  virtual ~DBRoleList();

  DBRoleList(const DBRoleList& from);

  inline DBRoleList& operator=(const DBRoleList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DBRoleList(DBRoleList&& from) noexcept
    : DBRoleList() {
    *this = ::std::move(from);
  }

  inline DBRoleList& operator=(DBRoleList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DBRoleList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBRoleList* internal_default_instance() {
    return reinterpret_cast<const DBRoleList*>(
               &_DBRoleList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(DBRoleList* other);
  friend void swap(DBRoleList& a, DBRoleList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DBRoleList* New() const final {
    return CreateMaybeMessage<DBRoleList>(NULL);
  }

  DBRoleList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DBRoleList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DBRoleList& from);
  void MergeFrom(const DBRoleList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBRoleList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .DBObject.DBRoleInfo> role_map = 1;
  int role_map_size() const;
  void clear_role_map();
  static const int kRoleMapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >&
      role_map() const;
  ::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >*
      mutable_role_map();

  // @@protoc_insertion_point(class_scope:DBObject.DBRoleList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DBRoleList_RoleMapEntry_DoNotUse,
      ::std::string, ::DBObject::DBRoleInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > role_map_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_game_5fdb_5fobject_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DBPropertyInt32

// map<int32, int32> map_int32 = 1;
inline int DBPropertyInt32::map_int32_size() const {
  return map_int32_.size();
}
inline void DBPropertyInt32::clear_map_int32() {
  map_int32_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
DBPropertyInt32::map_int32() const {
  // @@protoc_insertion_point(field_map:DBObject.DBPropertyInt32.map_int32)
  return map_int32_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
DBPropertyInt32::mutable_map_int32() {
  // @@protoc_insertion_point(field_mutable_map:DBObject.DBPropertyInt32.map_int32)
  return map_int32_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DBPropertyInt64

// map<int32, int64> map_int64 = 1;
inline int DBPropertyInt64::map_int64_size() const {
  return map_int64_.size();
}
inline void DBPropertyInt64::clear_map_int64() {
  map_int64_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
DBPropertyInt64::map_int64() const {
  // @@protoc_insertion_point(field_map:DBObject.DBPropertyInt64.map_int64)
  return map_int64_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
DBPropertyInt64::mutable_map_int64() {
  // @@protoc_insertion_point(field_mutable_map:DBObject.DBPropertyInt64.map_int64)
  return map_int64_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DBPropertyUint64

// map<int32, uint64> map_uint64 = 1;
inline int DBPropertyUint64::map_uint64_size() const {
  return map_uint64_.size();
}
inline void DBPropertyUint64::clear_map_uint64() {
  map_uint64_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >&
DBPropertyUint64::map_uint64() const {
  // @@protoc_insertion_point(field_map:DBObject.DBPropertyUint64.map_uint64)
  return map_uint64_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >*
DBPropertyUint64::mutable_map_uint64() {
  // @@protoc_insertion_point(field_mutable_map:DBObject.DBPropertyUint64.map_uint64)
  return map_uint64_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DBPropertyFloat

// map<int32, float> map_float = 1;
inline int DBPropertyFloat::map_float_size() const {
  return map_float_.size();
}
inline void DBPropertyFloat::clear_map_float() {
  map_float_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, float >&
DBPropertyFloat::map_float() const {
  // @@protoc_insertion_point(field_map:DBObject.DBPropertyFloat.map_float)
  return map_float_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, float >*
DBPropertyFloat::mutable_map_float() {
  // @@protoc_insertion_point(field_mutable_map:DBObject.DBPropertyFloat.map_float)
  return map_float_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DBPropertyDouble

// map<int32, double> map_double = 1;
inline int DBPropertyDouble::map_double_size() const {
  return map_double_.size();
}
inline void DBPropertyDouble::clear_map_double() {
  map_double_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, double >&
DBPropertyDouble::map_double() const {
  // @@protoc_insertion_point(field_map:DBObject.DBPropertyDouble.map_double)
  return map_double_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, double >*
DBPropertyDouble::mutable_map_double() {
  // @@protoc_insertion_point(field_mutable_map:DBObject.DBPropertyDouble.map_double)
  return map_double_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DBPropertyString

// map<int32, string> map_string = 1;
inline int DBPropertyString::map_string_size() const {
  return map_string_.size();
}
inline void DBPropertyString::clear_map_string() {
  map_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
DBPropertyString::map_string() const {
  // @@protoc_insertion_point(field_map:DBObject.DBPropertyString.map_string)
  return map_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
DBPropertyString::mutable_map_string() {
  // @@protoc_insertion_point(field_mutable_map:DBObject.DBPropertyString.map_string)
  return map_string_.MutableMap();
}

// -------------------------------------------------------------------

// DBObjectInfo

// .DBObject.DBPropertyInt32 property_int32 = 1;
inline bool DBObjectInfo::has_property_int32() const {
  return this != internal_default_instance() && property_int32_ != NULL;
}
inline void DBObjectInfo::clear_property_int32() {
  if (GetArenaNoVirtual() == NULL && property_int32_ != NULL) {
    delete property_int32_;
  }
  property_int32_ = NULL;
}
inline const ::DBObject::DBPropertyInt32& DBObjectInfo::_internal_property_int32() const {
  return *property_int32_;
}
inline const ::DBObject::DBPropertyInt32& DBObjectInfo::property_int32() const {
  const ::DBObject::DBPropertyInt32* p = property_int32_;
  // @@protoc_insertion_point(field_get:DBObject.DBObjectInfo.property_int32)
  return p != NULL ? *p : *reinterpret_cast<const ::DBObject::DBPropertyInt32*>(
      &::DBObject::_DBPropertyInt32_default_instance_);
}
inline ::DBObject::DBPropertyInt32* DBObjectInfo::release_property_int32() {
  // @@protoc_insertion_point(field_release:DBObject.DBObjectInfo.property_int32)
  
  ::DBObject::DBPropertyInt32* temp = property_int32_;
  property_int32_ = NULL;
  return temp;
}
inline ::DBObject::DBPropertyInt32* DBObjectInfo::mutable_property_int32() {
  
  if (property_int32_ == NULL) {
    auto* p = CreateMaybeMessage<::DBObject::DBPropertyInt32>(GetArenaNoVirtual());
    property_int32_ = p;
  }
  // @@protoc_insertion_point(field_mutable:DBObject.DBObjectInfo.property_int32)
  return property_int32_;
}
inline void DBObjectInfo::set_allocated_property_int32(::DBObject::DBPropertyInt32* property_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_int32_;
  }
  if (property_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      property_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property_int32, submessage_arena);
    }
    
  } else {
    
  }
  property_int32_ = property_int32;
  // @@protoc_insertion_point(field_set_allocated:DBObject.DBObjectInfo.property_int32)
}

// .DBObject.DBPropertyInt64 property_int64 = 2;
inline bool DBObjectInfo::has_property_int64() const {
  return this != internal_default_instance() && property_int64_ != NULL;
}
inline void DBObjectInfo::clear_property_int64() {
  if (GetArenaNoVirtual() == NULL && property_int64_ != NULL) {
    delete property_int64_;
  }
  property_int64_ = NULL;
}
inline const ::DBObject::DBPropertyInt64& DBObjectInfo::_internal_property_int64() const {
  return *property_int64_;
}
inline const ::DBObject::DBPropertyInt64& DBObjectInfo::property_int64() const {
  const ::DBObject::DBPropertyInt64* p = property_int64_;
  // @@protoc_insertion_point(field_get:DBObject.DBObjectInfo.property_int64)
  return p != NULL ? *p : *reinterpret_cast<const ::DBObject::DBPropertyInt64*>(
      &::DBObject::_DBPropertyInt64_default_instance_);
}
inline ::DBObject::DBPropertyInt64* DBObjectInfo::release_property_int64() {
  // @@protoc_insertion_point(field_release:DBObject.DBObjectInfo.property_int64)
  
  ::DBObject::DBPropertyInt64* temp = property_int64_;
  property_int64_ = NULL;
  return temp;
}
inline ::DBObject::DBPropertyInt64* DBObjectInfo::mutable_property_int64() {
  
  if (property_int64_ == NULL) {
    auto* p = CreateMaybeMessage<::DBObject::DBPropertyInt64>(GetArenaNoVirtual());
    property_int64_ = p;
  }
  // @@protoc_insertion_point(field_mutable:DBObject.DBObjectInfo.property_int64)
  return property_int64_;
}
inline void DBObjectInfo::set_allocated_property_int64(::DBObject::DBPropertyInt64* property_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_int64_;
  }
  if (property_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      property_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property_int64, submessage_arena);
    }
    
  } else {
    
  }
  property_int64_ = property_int64;
  // @@protoc_insertion_point(field_set_allocated:DBObject.DBObjectInfo.property_int64)
}

// .DBObject.DBPropertyUint64 property_uint64 = 3;
inline bool DBObjectInfo::has_property_uint64() const {
  return this != internal_default_instance() && property_uint64_ != NULL;
}
inline void DBObjectInfo::clear_property_uint64() {
  if (GetArenaNoVirtual() == NULL && property_uint64_ != NULL) {
    delete property_uint64_;
  }
  property_uint64_ = NULL;
}
inline const ::DBObject::DBPropertyUint64& DBObjectInfo::_internal_property_uint64() const {
  return *property_uint64_;
}
inline const ::DBObject::DBPropertyUint64& DBObjectInfo::property_uint64() const {
  const ::DBObject::DBPropertyUint64* p = property_uint64_;
  // @@protoc_insertion_point(field_get:DBObject.DBObjectInfo.property_uint64)
  return p != NULL ? *p : *reinterpret_cast<const ::DBObject::DBPropertyUint64*>(
      &::DBObject::_DBPropertyUint64_default_instance_);
}
inline ::DBObject::DBPropertyUint64* DBObjectInfo::release_property_uint64() {
  // @@protoc_insertion_point(field_release:DBObject.DBObjectInfo.property_uint64)
  
  ::DBObject::DBPropertyUint64* temp = property_uint64_;
  property_uint64_ = NULL;
  return temp;
}
inline ::DBObject::DBPropertyUint64* DBObjectInfo::mutable_property_uint64() {
  
  if (property_uint64_ == NULL) {
    auto* p = CreateMaybeMessage<::DBObject::DBPropertyUint64>(GetArenaNoVirtual());
    property_uint64_ = p;
  }
  // @@protoc_insertion_point(field_mutable:DBObject.DBObjectInfo.property_uint64)
  return property_uint64_;
}
inline void DBObjectInfo::set_allocated_property_uint64(::DBObject::DBPropertyUint64* property_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_uint64_;
  }
  if (property_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      property_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property_uint64, submessage_arena);
    }
    
  } else {
    
  }
  property_uint64_ = property_uint64;
  // @@protoc_insertion_point(field_set_allocated:DBObject.DBObjectInfo.property_uint64)
}

// .DBObject.DBPropertyFloat property_float = 4;
inline bool DBObjectInfo::has_property_float() const {
  return this != internal_default_instance() && property_float_ != NULL;
}
inline void DBObjectInfo::clear_property_float() {
  if (GetArenaNoVirtual() == NULL && property_float_ != NULL) {
    delete property_float_;
  }
  property_float_ = NULL;
}
inline const ::DBObject::DBPropertyFloat& DBObjectInfo::_internal_property_float() const {
  return *property_float_;
}
inline const ::DBObject::DBPropertyFloat& DBObjectInfo::property_float() const {
  const ::DBObject::DBPropertyFloat* p = property_float_;
  // @@protoc_insertion_point(field_get:DBObject.DBObjectInfo.property_float)
  return p != NULL ? *p : *reinterpret_cast<const ::DBObject::DBPropertyFloat*>(
      &::DBObject::_DBPropertyFloat_default_instance_);
}
inline ::DBObject::DBPropertyFloat* DBObjectInfo::release_property_float() {
  // @@protoc_insertion_point(field_release:DBObject.DBObjectInfo.property_float)
  
  ::DBObject::DBPropertyFloat* temp = property_float_;
  property_float_ = NULL;
  return temp;
}
inline ::DBObject::DBPropertyFloat* DBObjectInfo::mutable_property_float() {
  
  if (property_float_ == NULL) {
    auto* p = CreateMaybeMessage<::DBObject::DBPropertyFloat>(GetArenaNoVirtual());
    property_float_ = p;
  }
  // @@protoc_insertion_point(field_mutable:DBObject.DBObjectInfo.property_float)
  return property_float_;
}
inline void DBObjectInfo::set_allocated_property_float(::DBObject::DBPropertyFloat* property_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_float_;
  }
  if (property_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      property_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property_float, submessage_arena);
    }
    
  } else {
    
  }
  property_float_ = property_float;
  // @@protoc_insertion_point(field_set_allocated:DBObject.DBObjectInfo.property_float)
}

// .DBObject.DBPropertyDouble property_double = 5;
inline bool DBObjectInfo::has_property_double() const {
  return this != internal_default_instance() && property_double_ != NULL;
}
inline void DBObjectInfo::clear_property_double() {
  if (GetArenaNoVirtual() == NULL && property_double_ != NULL) {
    delete property_double_;
  }
  property_double_ = NULL;
}
inline const ::DBObject::DBPropertyDouble& DBObjectInfo::_internal_property_double() const {
  return *property_double_;
}
inline const ::DBObject::DBPropertyDouble& DBObjectInfo::property_double() const {
  const ::DBObject::DBPropertyDouble* p = property_double_;
  // @@protoc_insertion_point(field_get:DBObject.DBObjectInfo.property_double)
  return p != NULL ? *p : *reinterpret_cast<const ::DBObject::DBPropertyDouble*>(
      &::DBObject::_DBPropertyDouble_default_instance_);
}
inline ::DBObject::DBPropertyDouble* DBObjectInfo::release_property_double() {
  // @@protoc_insertion_point(field_release:DBObject.DBObjectInfo.property_double)
  
  ::DBObject::DBPropertyDouble* temp = property_double_;
  property_double_ = NULL;
  return temp;
}
inline ::DBObject::DBPropertyDouble* DBObjectInfo::mutable_property_double() {
  
  if (property_double_ == NULL) {
    auto* p = CreateMaybeMessage<::DBObject::DBPropertyDouble>(GetArenaNoVirtual());
    property_double_ = p;
  }
  // @@protoc_insertion_point(field_mutable:DBObject.DBObjectInfo.property_double)
  return property_double_;
}
inline void DBObjectInfo::set_allocated_property_double(::DBObject::DBPropertyDouble* property_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_double_;
  }
  if (property_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      property_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property_double, submessage_arena);
    }
    
  } else {
    
  }
  property_double_ = property_double;
  // @@protoc_insertion_point(field_set_allocated:DBObject.DBObjectInfo.property_double)
}

// .DBObject.DBPropertyString property_string = 6;
inline bool DBObjectInfo::has_property_string() const {
  return this != internal_default_instance() && property_string_ != NULL;
}
inline void DBObjectInfo::clear_property_string() {
  if (GetArenaNoVirtual() == NULL && property_string_ != NULL) {
    delete property_string_;
  }
  property_string_ = NULL;
}
inline const ::DBObject::DBPropertyString& DBObjectInfo::_internal_property_string() const {
  return *property_string_;
}
inline const ::DBObject::DBPropertyString& DBObjectInfo::property_string() const {
  const ::DBObject::DBPropertyString* p = property_string_;
  // @@protoc_insertion_point(field_get:DBObject.DBObjectInfo.property_string)
  return p != NULL ? *p : *reinterpret_cast<const ::DBObject::DBPropertyString*>(
      &::DBObject::_DBPropertyString_default_instance_);
}
inline ::DBObject::DBPropertyString* DBObjectInfo::release_property_string() {
  // @@protoc_insertion_point(field_release:DBObject.DBObjectInfo.property_string)
  
  ::DBObject::DBPropertyString* temp = property_string_;
  property_string_ = NULL;
  return temp;
}
inline ::DBObject::DBPropertyString* DBObjectInfo::mutable_property_string() {
  
  if (property_string_ == NULL) {
    auto* p = CreateMaybeMessage<::DBObject::DBPropertyString>(GetArenaNoVirtual());
    property_string_ = p;
  }
  // @@protoc_insertion_point(field_mutable:DBObject.DBObjectInfo.property_string)
  return property_string_;
}
inline void DBObjectInfo::set_allocated_property_string(::DBObject::DBPropertyString* property_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_string_;
  }
  if (property_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      property_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property_string, submessage_arena);
    }
    
  } else {
    
  }
  property_string_ = property_string;
  // @@protoc_insertion_point(field_set_allocated:DBObject.DBObjectInfo.property_string)
}

// -------------------------------------------------------------------

// DBRoleInfo

// string role_name = 1;
inline void DBRoleInfo::clear_role_name() {
  role_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DBRoleInfo::role_name() const {
  // @@protoc_insertion_point(field_get:DBObject.DBRoleInfo.role_name)
  return role_name_.GetNoArena();
}
inline void DBRoleInfo::set_role_name(const ::std::string& value) {
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBObject.DBRoleInfo.role_name)
}
#if LANG_CXX11
inline void DBRoleInfo::set_role_name(::std::string&& value) {
  
  role_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DBObject.DBRoleInfo.role_name)
}
#endif
inline void DBRoleInfo::set_role_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBObject.DBRoleInfo.role_name)
}
inline void DBRoleInfo::set_role_name(const char* value, size_t size) {
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBObject.DBRoleInfo.role_name)
}
inline ::std::string* DBRoleInfo::mutable_role_name() {
  
  // @@protoc_insertion_point(field_mutable:DBObject.DBRoleInfo.role_name)
  return role_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBRoleInfo::release_role_name() {
  // @@protoc_insertion_point(field_release:DBObject.DBRoleInfo.role_name)
  
  return role_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBRoleInfo::set_allocated_role_name(::std::string* role_name) {
  if (role_name != NULL) {
    
  } else {
    
  }
  role_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_name);
  // @@protoc_insertion_point(field_set_allocated:DBObject.DBRoleInfo.role_name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DBRoleList

// map<string, .DBObject.DBRoleInfo> role_map = 1;
inline int DBRoleList::role_map_size() const {
  return role_map_.size();
}
inline void DBRoleList::clear_role_map() {
  role_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >&
DBRoleList::role_map() const {
  // @@protoc_insertion_point(field_map:DBObject.DBRoleList.role_map)
  return role_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >*
DBRoleList::mutable_role_map() {
  // @@protoc_insertion_point(field_mutable_map:DBObject.DBRoleList.role_map)
  return role_map_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace DBObject

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_game_5fdb_5fobject_2eproto
