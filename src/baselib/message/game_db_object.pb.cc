// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_db_object.proto

#include "game_db_object.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_game_5fdb_5fobject_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyDouble_MapDoubleEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyFloat_MapFloatEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyInt32_MapInt32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyInt64_MapInt64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyString_MapStringEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyUint64_MapUint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DBRoleInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyDouble;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyFloat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyInt32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyInt64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyString;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyUint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_game_5fdb_5fobject_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DBRoleList_RoleMapEntry_DoNotUse;
}  // namespace protobuf_game_5fdb_5fobject_2eproto
namespace DBObject {
class DBPropertyInt32_MapInt32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyInt32_MapInt32Entry_DoNotUse>
      _instance;
} _DBPropertyInt32_MapInt32Entry_DoNotUse_default_instance_;
class DBPropertyInt32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyInt32>
      _instance;
} _DBPropertyInt32_default_instance_;
class DBPropertyInt64_MapInt64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyInt64_MapInt64Entry_DoNotUse>
      _instance;
} _DBPropertyInt64_MapInt64Entry_DoNotUse_default_instance_;
class DBPropertyInt64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyInt64>
      _instance;
} _DBPropertyInt64_default_instance_;
class DBPropertyUint64_MapUint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyUint64_MapUint64Entry_DoNotUse>
      _instance;
} _DBPropertyUint64_MapUint64Entry_DoNotUse_default_instance_;
class DBPropertyUint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyUint64>
      _instance;
} _DBPropertyUint64_default_instance_;
class DBPropertyFloat_MapFloatEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyFloat_MapFloatEntry_DoNotUse>
      _instance;
} _DBPropertyFloat_MapFloatEntry_DoNotUse_default_instance_;
class DBPropertyFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyFloat>
      _instance;
} _DBPropertyFloat_default_instance_;
class DBPropertyDouble_MapDoubleEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyDouble_MapDoubleEntry_DoNotUse>
      _instance;
} _DBPropertyDouble_MapDoubleEntry_DoNotUse_default_instance_;
class DBPropertyDoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyDouble>
      _instance;
} _DBPropertyDouble_default_instance_;
class DBPropertyString_MapStringEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyString_MapStringEntry_DoNotUse>
      _instance;
} _DBPropertyString_MapStringEntry_DoNotUse_default_instance_;
class DBPropertyStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBPropertyString>
      _instance;
} _DBPropertyString_default_instance_;
class DBObjectInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBObjectInfo>
      _instance;
} _DBObjectInfo_default_instance_;
class DBRoleInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBRoleInfo>
      _instance;
} _DBRoleInfo_default_instance_;
class DBRoleList_RoleMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBRoleList_RoleMapEntry_DoNotUse>
      _instance;
} _DBRoleList_RoleMapEntry_DoNotUse_default_instance_;
class DBRoleListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBRoleList>
      _instance;
} _DBRoleList_default_instance_;
}  // namespace DBObject
namespace protobuf_game_5fdb_5fobject_2eproto {
static void InitDefaultsDBPropertyInt32_MapInt32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyInt32_MapInt32Entry_DoNotUse_default_instance_;
    new (ptr) ::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse();
  }
  ::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyInt32_MapInt32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDBPropertyInt32_MapInt32Entry_DoNotUse}, {}};

static void InitDefaultsDBPropertyInt32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyInt32_default_instance_;
    new (ptr) ::DBObject::DBPropertyInt32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBObject::DBPropertyInt32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyInt32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDBPropertyInt32}, {
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyInt32_MapInt32Entry_DoNotUse.base,}};

static void InitDefaultsDBPropertyInt64_MapInt64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyInt64_MapInt64Entry_DoNotUse_default_instance_;
    new (ptr) ::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse();
  }
  ::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyInt64_MapInt64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDBPropertyInt64_MapInt64Entry_DoNotUse}, {}};

static void InitDefaultsDBPropertyInt64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyInt64_default_instance_;
    new (ptr) ::DBObject::DBPropertyInt64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBObject::DBPropertyInt64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyInt64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDBPropertyInt64}, {
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyInt64_MapInt64Entry_DoNotUse.base,}};

static void InitDefaultsDBPropertyUint64_MapUint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyUint64_MapUint64Entry_DoNotUse_default_instance_;
    new (ptr) ::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse();
  }
  ::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyUint64_MapUint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDBPropertyUint64_MapUint64Entry_DoNotUse}, {}};

static void InitDefaultsDBPropertyUint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyUint64_default_instance_;
    new (ptr) ::DBObject::DBPropertyUint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBObject::DBPropertyUint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyUint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDBPropertyUint64}, {
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyUint64_MapUint64Entry_DoNotUse.base,}};

static void InitDefaultsDBPropertyFloat_MapFloatEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyFloat_MapFloatEntry_DoNotUse_default_instance_;
    new (ptr) ::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse();
  }
  ::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyFloat_MapFloatEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDBPropertyFloat_MapFloatEntry_DoNotUse}, {}};

static void InitDefaultsDBPropertyFloat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyFloat_default_instance_;
    new (ptr) ::DBObject::DBPropertyFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBObject::DBPropertyFloat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyFloat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDBPropertyFloat}, {
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyFloat_MapFloatEntry_DoNotUse.base,}};

static void InitDefaultsDBPropertyDouble_MapDoubleEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyDouble_MapDoubleEntry_DoNotUse_default_instance_;
    new (ptr) ::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse();
  }
  ::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyDouble_MapDoubleEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDBPropertyDouble_MapDoubleEntry_DoNotUse}, {}};

static void InitDefaultsDBPropertyDouble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyDouble_default_instance_;
    new (ptr) ::DBObject::DBPropertyDouble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBObject::DBPropertyDouble::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyDouble =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDBPropertyDouble}, {
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyDouble_MapDoubleEntry_DoNotUse.base,}};

static void InitDefaultsDBPropertyString_MapStringEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyString_MapStringEntry_DoNotUse_default_instance_;
    new (ptr) ::DBObject::DBPropertyString_MapStringEntry_DoNotUse();
  }
  ::DBObject::DBPropertyString_MapStringEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DBPropertyString_MapStringEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDBPropertyString_MapStringEntry_DoNotUse}, {}};

static void InitDefaultsDBPropertyString() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBPropertyString_default_instance_;
    new (ptr) ::DBObject::DBPropertyString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBObject::DBPropertyString::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DBPropertyString =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDBPropertyString}, {
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyString_MapStringEntry_DoNotUse.base,}};

static void InitDefaultsDBObjectInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBObjectInfo_default_instance_;
    new (ptr) ::DBObject::DBObjectInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBObject::DBObjectInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_DBObjectInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsDBObjectInfo}, {
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyInt32.base,
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyInt64.base,
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyUint64.base,
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyFloat.base,
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyDouble.base,
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyString.base,}};

static void InitDefaultsDBRoleInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBRoleInfo_default_instance_;
    new (ptr) ::DBObject::DBRoleInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBObject::DBRoleInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DBRoleInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDBRoleInfo}, {}};

static void InitDefaultsDBRoleList_RoleMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBRoleList_RoleMapEntry_DoNotUse_default_instance_;
    new (ptr) ::DBObject::DBRoleList_RoleMapEntry_DoNotUse();
  }
  ::DBObject::DBRoleList_RoleMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DBRoleList_RoleMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDBRoleList_RoleMapEntry_DoNotUse}, {
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBRoleInfo.base,}};

static void InitDefaultsDBRoleList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBObject::_DBRoleList_default_instance_;
    new (ptr) ::DBObject::DBRoleList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBObject::DBRoleList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DBRoleList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDBRoleList}, {
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBRoleList_RoleMapEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyInt32_MapInt32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyInt32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyInt64_MapInt64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyInt64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyUint64_MapUint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyUint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyFloat_MapFloatEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyFloat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyDouble_MapDoubleEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyDouble.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyString_MapStringEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBPropertyString.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBObjectInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBRoleInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBRoleList_RoleMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBRoleList.base);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt32, map_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyInt64, map_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyUint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyUint64, map_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyFloat, map_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyDouble, map_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyString_MapStringEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyString_MapStringEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyString_MapStringEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyString_MapStringEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBPropertyString, map_string_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBObjectInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBObjectInfo, property_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBObjectInfo, property_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBObjectInfo, property_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBObjectInfo, property_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBObjectInfo, property_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBObjectInfo, property_string_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBRoleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBRoleInfo, role_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBRoleList_RoleMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBRoleList_RoleMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBRoleList_RoleMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBRoleList_RoleMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBRoleList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBObject::DBRoleList, role_map_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse)},
  { 9, -1, sizeof(::DBObject::DBPropertyInt32)},
  { 15, 22, sizeof(::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse)},
  { 24, -1, sizeof(::DBObject::DBPropertyInt64)},
  { 30, 37, sizeof(::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse)},
  { 39, -1, sizeof(::DBObject::DBPropertyUint64)},
  { 45, 52, sizeof(::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse)},
  { 54, -1, sizeof(::DBObject::DBPropertyFloat)},
  { 60, 67, sizeof(::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse)},
  { 69, -1, sizeof(::DBObject::DBPropertyDouble)},
  { 75, 82, sizeof(::DBObject::DBPropertyString_MapStringEntry_DoNotUse)},
  { 84, -1, sizeof(::DBObject::DBPropertyString)},
  { 90, -1, sizeof(::DBObject::DBObjectInfo)},
  { 101, -1, sizeof(::DBObject::DBRoleInfo)},
  { 107, 114, sizeof(::DBObject::DBRoleList_RoleMapEntry_DoNotUse)},
  { 116, -1, sizeof(::DBObject::DBRoleList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyInt32_MapInt32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyInt32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyInt64_MapInt64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyInt64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyUint64_MapUint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyUint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyFloat_MapFloatEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyDouble_MapDoubleEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyString_MapStringEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBPropertyString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBObjectInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBRoleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBRoleList_RoleMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBObject::_DBRoleList_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "game_db_object.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024game_db_object.proto\022\010DBObject\"~\n\017DBPr"
      "opertyInt32\022:\n\tmap_int32\030\001 \003(\0132\'.DBObjec"
      "t.DBPropertyInt32.MapInt32Entry\032/\n\rMapIn"
      "t32Entry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001"
      "\"~\n\017DBPropertyInt64\022:\n\tmap_int64\030\001 \003(\0132\'"
      ".DBObject.DBPropertyInt64.MapInt64Entry\032"
      "/\n\rMapInt64Entry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002"
      " \001(\003:\0028\001\"\203\001\n\020DBPropertyUint64\022=\n\nmap_uin"
      "t64\030\001 \003(\0132).DBObject.DBPropertyUint64.Ma"
      "pUint64Entry\0320\n\016MapUint64Entry\022\013\n\003key\030\001 "
      "\001(\005\022\r\n\005value\030\002 \001(\004:\0028\001\"~\n\017DBPropertyFloa"
      "t\022:\n\tmap_float\030\001 \003(\0132\'.DBObject.DBProper"
      "tyFloat.MapFloatEntry\032/\n\rMapFloatEntry\022\013"
      "\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\002:\0028\001\"\203\001\n\020DBPro"
      "pertyDouble\022=\n\nmap_double\030\001 \003(\0132).DBObje"
      "ct.DBPropertyDouble.MapDoubleEntry\0320\n\016Ma"
      "pDoubleEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\001"
      ":\0028\001\"\203\001\n\020DBPropertyString\022=\n\nmap_string\030"
      "\001 \003(\0132).DBObject.DBPropertyString.MapStr"
      "ingEntry\0320\n\016MapStringEntry\022\013\n\003key\030\001 \001(\005\022"
      "\r\n\005value\030\002 \001(\t:\0028\001\"\306\002\n\014DBObjectInfo\0221\n\016p"
      "roperty_int32\030\001 \001(\0132\031.DBObject.DBPropert"
      "yInt32\0221\n\016property_int64\030\002 \001(\0132\031.DBObjec"
      "t.DBPropertyInt64\0223\n\017property_uint64\030\003 \001"
      "(\0132\032.DBObject.DBPropertyUint64\0221\n\016proper"
      "ty_float\030\004 \001(\0132\031.DBObject.DBPropertyFloa"
      "t\0223\n\017property_double\030\005 \001(\0132\032.DBObject.DB"
      "PropertyDouble\0223\n\017property_string\030\006 \001(\0132"
      "\032.DBObject.DBPropertyString\"\037\n\nDBRoleInf"
      "o\022\021\n\trole_name\030\001 \001(\t\"\207\001\n\nDBRoleList\0223\n\010r"
      "ole_map\030\001 \003(\0132!.DBObject.DBRoleList.Role"
      "MapEntry\032D\n\014RoleMapEntry\022\013\n\003key\030\001 \001(\t\022#\n"
      "\005value\030\002 \001(\0132\024.DBObject.DBRoleInfo:\0028\001b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1326);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_db_object.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_game_5fdb_5fobject_2eproto
namespace DBObject {

// ===================================================================

DBPropertyInt32_MapInt32Entry_DoNotUse::DBPropertyInt32_MapInt32Entry_DoNotUse() {}
DBPropertyInt32_MapInt32Entry_DoNotUse::DBPropertyInt32_MapInt32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void DBPropertyInt32_MapInt32Entry_DoNotUse::MergeFrom(const DBPropertyInt32_MapInt32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DBPropertyInt32_MapInt32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[0];
}
void DBPropertyInt32_MapInt32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void DBPropertyInt32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPropertyInt32::kMapInt32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPropertyInt32::DBPropertyInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyInt32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBObject.DBPropertyInt32)
}
DBPropertyInt32::DBPropertyInt32(const DBPropertyInt32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_int32_.MergeFrom(from.map_int32_);
  // @@protoc_insertion_point(copy_constructor:DBObject.DBPropertyInt32)
}

void DBPropertyInt32::SharedCtor() {
}

DBPropertyInt32::~DBPropertyInt32() {
  // @@protoc_insertion_point(destructor:DBObject.DBPropertyInt32)
  SharedDtor();
}

void DBPropertyInt32::SharedDtor() {
}

void DBPropertyInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DBPropertyInt32::descriptor() {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPropertyInt32& DBPropertyInt32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyInt32.base);
  return *internal_default_instance();
}


void DBPropertyInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:DBObject.DBPropertyInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_int32_.Clear();
  _internal_metadata_.Clear();
}

bool DBPropertyInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBObject.DBPropertyInt32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, int32> map_int32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DBPropertyInt32_MapInt32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DBPropertyInt32_MapInt32Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&map_int32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBObject.DBPropertyInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBObject.DBPropertyInt32)
  return false;
#undef DO_
}

void DBPropertyInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBObject.DBPropertyInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, int32> map_int32 = 1;
  if (!this->map_int32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32().begin();
          it != this->map_int32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyInt32_MapInt32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<DBPropertyInt32_MapInt32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32().begin();
          it != this->map_int32().end(); ++it) {
        entry.reset(map_int32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBObject.DBPropertyInt32)
}

::google::protobuf::uint8* DBPropertyInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBObject.DBPropertyInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, int32> map_int32 = 1;
  if (!this->map_int32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32().begin();
          it != this->map_int32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyInt32_MapInt32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<DBPropertyInt32_MapInt32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32().begin();
          it != this->map_int32().end(); ++it) {
        entry.reset(map_int32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBObject.DBPropertyInt32)
  return target;
}

size_t DBPropertyInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBObject.DBPropertyInt32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, int32> map_int32 = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_int32_size());
  {
    ::std::unique_ptr<DBPropertyInt32_MapInt32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->map_int32().begin();
        it != this->map_int32().end(); ++it) {
      entry.reset(map_int32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBPropertyInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBObject.DBPropertyInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPropertyInt32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPropertyInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBObject.DBPropertyInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBObject.DBPropertyInt32)
    MergeFrom(*source);
  }
}

void DBPropertyInt32::MergeFrom(const DBPropertyInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBObject.DBPropertyInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_int32_.MergeFrom(from.map_int32_);
}

void DBPropertyInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBObject.DBPropertyInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPropertyInt32::CopyFrom(const DBPropertyInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBObject.DBPropertyInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPropertyInt32::IsInitialized() const {
  return true;
}

void DBPropertyInt32::Swap(DBPropertyInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPropertyInt32::InternalSwap(DBPropertyInt32* other) {
  using std::swap;
  map_int32_.Swap(&other->map_int32_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DBPropertyInt32::GetMetadata() const {
  protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

DBPropertyInt64_MapInt64Entry_DoNotUse::DBPropertyInt64_MapInt64Entry_DoNotUse() {}
DBPropertyInt64_MapInt64Entry_DoNotUse::DBPropertyInt64_MapInt64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void DBPropertyInt64_MapInt64Entry_DoNotUse::MergeFrom(const DBPropertyInt64_MapInt64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DBPropertyInt64_MapInt64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[2];
}
void DBPropertyInt64_MapInt64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void DBPropertyInt64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPropertyInt64::kMapInt64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPropertyInt64::DBPropertyInt64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyInt64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBObject.DBPropertyInt64)
}
DBPropertyInt64::DBPropertyInt64(const DBPropertyInt64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_int64_.MergeFrom(from.map_int64_);
  // @@protoc_insertion_point(copy_constructor:DBObject.DBPropertyInt64)
}

void DBPropertyInt64::SharedCtor() {
}

DBPropertyInt64::~DBPropertyInt64() {
  // @@protoc_insertion_point(destructor:DBObject.DBPropertyInt64)
  SharedDtor();
}

void DBPropertyInt64::SharedDtor() {
}

void DBPropertyInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DBPropertyInt64::descriptor() {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPropertyInt64& DBPropertyInt64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyInt64.base);
  return *internal_default_instance();
}


void DBPropertyInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:DBObject.DBPropertyInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_int64_.Clear();
  _internal_metadata_.Clear();
}

bool DBPropertyInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBObject.DBPropertyInt64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, int64> map_int64 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DBPropertyInt64_MapInt64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DBPropertyInt64_MapInt64Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 > > parser(&map_int64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBObject.DBPropertyInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBObject.DBPropertyInt64)
  return false;
#undef DO_
}

void DBPropertyInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBObject.DBPropertyInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, int64> map_int64 = 1;
  if (!this->map_int64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64().begin();
          it != this->map_int64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyInt64_MapInt64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<DBPropertyInt64_MapInt64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64().begin();
          it != this->map_int64().end(); ++it) {
        entry.reset(map_int64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBObject.DBPropertyInt64)
}

::google::protobuf::uint8* DBPropertyInt64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBObject.DBPropertyInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, int64> map_int64 = 1;
  if (!this->map_int64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64().begin();
          it != this->map_int64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyInt64_MapInt64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<DBPropertyInt64_MapInt64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64().begin();
          it != this->map_int64().end(); ++it) {
        entry.reset(map_int64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBObject.DBPropertyInt64)
  return target;
}

size_t DBPropertyInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBObject.DBPropertyInt64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, int64> map_int64 = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_int64_size());
  {
    ::std::unique_ptr<DBPropertyInt64_MapInt64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
        it = this->map_int64().begin();
        it != this->map_int64().end(); ++it) {
      entry.reset(map_int64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBPropertyInt64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBObject.DBPropertyInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPropertyInt64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPropertyInt64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBObject.DBPropertyInt64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBObject.DBPropertyInt64)
    MergeFrom(*source);
  }
}

void DBPropertyInt64::MergeFrom(const DBPropertyInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBObject.DBPropertyInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_int64_.MergeFrom(from.map_int64_);
}

void DBPropertyInt64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBObject.DBPropertyInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPropertyInt64::CopyFrom(const DBPropertyInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBObject.DBPropertyInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPropertyInt64::IsInitialized() const {
  return true;
}

void DBPropertyInt64::Swap(DBPropertyInt64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPropertyInt64::InternalSwap(DBPropertyInt64* other) {
  using std::swap;
  map_int64_.Swap(&other->map_int64_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DBPropertyInt64::GetMetadata() const {
  protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

DBPropertyUint64_MapUint64Entry_DoNotUse::DBPropertyUint64_MapUint64Entry_DoNotUse() {}
DBPropertyUint64_MapUint64Entry_DoNotUse::DBPropertyUint64_MapUint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void DBPropertyUint64_MapUint64Entry_DoNotUse::MergeFrom(const DBPropertyUint64_MapUint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DBPropertyUint64_MapUint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[4];
}
void DBPropertyUint64_MapUint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void DBPropertyUint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPropertyUint64::kMapUint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPropertyUint64::DBPropertyUint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyUint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBObject.DBPropertyUint64)
}
DBPropertyUint64::DBPropertyUint64(const DBPropertyUint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_uint64_.MergeFrom(from.map_uint64_);
  // @@protoc_insertion_point(copy_constructor:DBObject.DBPropertyUint64)
}

void DBPropertyUint64::SharedCtor() {
}

DBPropertyUint64::~DBPropertyUint64() {
  // @@protoc_insertion_point(destructor:DBObject.DBPropertyUint64)
  SharedDtor();
}

void DBPropertyUint64::SharedDtor() {
}

void DBPropertyUint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DBPropertyUint64::descriptor() {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPropertyUint64& DBPropertyUint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyUint64.base);
  return *internal_default_instance();
}


void DBPropertyUint64::Clear() {
// @@protoc_insertion_point(message_clear_start:DBObject.DBPropertyUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_uint64_.Clear();
  _internal_metadata_.Clear();
}

bool DBPropertyUint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBObject.DBPropertyUint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, uint64> map_uint64 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DBPropertyUint64_MapUint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DBPropertyUint64_MapUint64Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 > > parser(&map_uint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBObject.DBPropertyUint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBObject.DBPropertyUint64)
  return false;
#undef DO_
}

void DBPropertyUint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBObject.DBPropertyUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, uint64> map_uint64 = 1;
  if (!this->map_uint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_uint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64().begin();
          it != this->map_uint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyUint64_MapUint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<DBPropertyUint64_MapUint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64().begin();
          it != this->map_uint64().end(); ++it) {
        entry.reset(map_uint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBObject.DBPropertyUint64)
}

::google::protobuf::uint8* DBPropertyUint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBObject.DBPropertyUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, uint64> map_uint64 = 1;
  if (!this->map_uint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_uint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64().begin();
          it != this->map_uint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyUint64_MapUint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<DBPropertyUint64_MapUint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64().begin();
          it != this->map_uint64().end(); ++it) {
        entry.reset(map_uint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBObject.DBPropertyUint64)
  return target;
}

size_t DBPropertyUint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBObject.DBPropertyUint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, uint64> map_uint64 = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_uint64_size());
  {
    ::std::unique_ptr<DBPropertyUint64_MapUint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint64 >::const_iterator
        it = this->map_uint64().begin();
        it != this->map_uint64().end(); ++it) {
      entry.reset(map_uint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBPropertyUint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBObject.DBPropertyUint64)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPropertyUint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPropertyUint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBObject.DBPropertyUint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBObject.DBPropertyUint64)
    MergeFrom(*source);
  }
}

void DBPropertyUint64::MergeFrom(const DBPropertyUint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBObject.DBPropertyUint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_uint64_.MergeFrom(from.map_uint64_);
}

void DBPropertyUint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBObject.DBPropertyUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPropertyUint64::CopyFrom(const DBPropertyUint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBObject.DBPropertyUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPropertyUint64::IsInitialized() const {
  return true;
}

void DBPropertyUint64::Swap(DBPropertyUint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPropertyUint64::InternalSwap(DBPropertyUint64* other) {
  using std::swap;
  map_uint64_.Swap(&other->map_uint64_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DBPropertyUint64::GetMetadata() const {
  protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

DBPropertyFloat_MapFloatEntry_DoNotUse::DBPropertyFloat_MapFloatEntry_DoNotUse() {}
DBPropertyFloat_MapFloatEntry_DoNotUse::DBPropertyFloat_MapFloatEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void DBPropertyFloat_MapFloatEntry_DoNotUse::MergeFrom(const DBPropertyFloat_MapFloatEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DBPropertyFloat_MapFloatEntry_DoNotUse::GetMetadata() const {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[6];
}
void DBPropertyFloat_MapFloatEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void DBPropertyFloat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPropertyFloat::kMapFloatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPropertyFloat::DBPropertyFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyFloat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBObject.DBPropertyFloat)
}
DBPropertyFloat::DBPropertyFloat(const DBPropertyFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_float_.MergeFrom(from.map_float_);
  // @@protoc_insertion_point(copy_constructor:DBObject.DBPropertyFloat)
}

void DBPropertyFloat::SharedCtor() {
}

DBPropertyFloat::~DBPropertyFloat() {
  // @@protoc_insertion_point(destructor:DBObject.DBPropertyFloat)
  SharedDtor();
}

void DBPropertyFloat::SharedDtor() {
}

void DBPropertyFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DBPropertyFloat::descriptor() {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPropertyFloat& DBPropertyFloat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyFloat.base);
  return *internal_default_instance();
}


void DBPropertyFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:DBObject.DBPropertyFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_float_.Clear();
  _internal_metadata_.Clear();
}

bool DBPropertyFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBObject.DBPropertyFloat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, float> map_float = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DBPropertyFloat_MapFloatEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DBPropertyFloat_MapFloatEntry_DoNotUse,
              ::google::protobuf::int32, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, float > > parser(&map_float_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBObject.DBPropertyFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBObject.DBPropertyFloat)
  return false;
#undef DO_
}

void DBPropertyFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBObject.DBPropertyFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, float> map_float = 1;
  if (!this->map_float().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_float().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_float().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_float().begin();
          it != this->map_float().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyFloat_MapFloatEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_float_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<DBPropertyFloat_MapFloatEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_float().begin();
          it != this->map_float().end(); ++it) {
        entry.reset(map_float_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBObject.DBPropertyFloat)
}

::google::protobuf::uint8* DBPropertyFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBObject.DBPropertyFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, float> map_float = 1;
  if (!this->map_float().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_float().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_float().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_float().begin();
          it != this->map_float().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyFloat_MapFloatEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_float_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<DBPropertyFloat_MapFloatEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_float().begin();
          it != this->map_float().end(); ++it) {
        entry.reset(map_float_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBObject.DBPropertyFloat)
  return target;
}

size_t DBPropertyFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBObject.DBPropertyFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, float> map_float = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_float_size());
  {
    ::std::unique_ptr<DBPropertyFloat_MapFloatEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
        it = this->map_float().begin();
        it != this->map_float().end(); ++it) {
      entry.reset(map_float_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBPropertyFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBObject.DBPropertyFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPropertyFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPropertyFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBObject.DBPropertyFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBObject.DBPropertyFloat)
    MergeFrom(*source);
  }
}

void DBPropertyFloat::MergeFrom(const DBPropertyFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBObject.DBPropertyFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_float_.MergeFrom(from.map_float_);
}

void DBPropertyFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBObject.DBPropertyFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPropertyFloat::CopyFrom(const DBPropertyFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBObject.DBPropertyFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPropertyFloat::IsInitialized() const {
  return true;
}

void DBPropertyFloat::Swap(DBPropertyFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPropertyFloat::InternalSwap(DBPropertyFloat* other) {
  using std::swap;
  map_float_.Swap(&other->map_float_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DBPropertyFloat::GetMetadata() const {
  protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

DBPropertyDouble_MapDoubleEntry_DoNotUse::DBPropertyDouble_MapDoubleEntry_DoNotUse() {}
DBPropertyDouble_MapDoubleEntry_DoNotUse::DBPropertyDouble_MapDoubleEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void DBPropertyDouble_MapDoubleEntry_DoNotUse::MergeFrom(const DBPropertyDouble_MapDoubleEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DBPropertyDouble_MapDoubleEntry_DoNotUse::GetMetadata() const {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[8];
}
void DBPropertyDouble_MapDoubleEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void DBPropertyDouble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPropertyDouble::kMapDoubleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPropertyDouble::DBPropertyDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyDouble.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBObject.DBPropertyDouble)
}
DBPropertyDouble::DBPropertyDouble(const DBPropertyDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_double_.MergeFrom(from.map_double_);
  // @@protoc_insertion_point(copy_constructor:DBObject.DBPropertyDouble)
}

void DBPropertyDouble::SharedCtor() {
}

DBPropertyDouble::~DBPropertyDouble() {
  // @@protoc_insertion_point(destructor:DBObject.DBPropertyDouble)
  SharedDtor();
}

void DBPropertyDouble::SharedDtor() {
}

void DBPropertyDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DBPropertyDouble::descriptor() {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPropertyDouble& DBPropertyDouble::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyDouble.base);
  return *internal_default_instance();
}


void DBPropertyDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:DBObject.DBPropertyDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_double_.Clear();
  _internal_metadata_.Clear();
}

bool DBPropertyDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBObject.DBPropertyDouble)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, double> map_double = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DBPropertyDouble_MapDoubleEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DBPropertyDouble_MapDoubleEntry_DoNotUse,
              ::google::protobuf::int32, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, double > > parser(&map_double_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBObject.DBPropertyDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBObject.DBPropertyDouble)
  return false;
#undef DO_
}

void DBPropertyDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBObject.DBPropertyDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, double> map_double = 1;
  if (!this->map_double().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_double().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_double().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_double().begin();
          it != this->map_double().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyDouble_MapDoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_double_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<DBPropertyDouble_MapDoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_double().begin();
          it != this->map_double().end(); ++it) {
        entry.reset(map_double_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBObject.DBPropertyDouble)
}

::google::protobuf::uint8* DBPropertyDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBObject.DBPropertyDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, double> map_double = 1;
  if (!this->map_double().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_double().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_double().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_double().begin();
          it != this->map_double().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyDouble_MapDoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_double_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<DBPropertyDouble_MapDoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_double().begin();
          it != this->map_double().end(); ++it) {
        entry.reset(map_double_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBObject.DBPropertyDouble)
  return target;
}

size_t DBPropertyDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBObject.DBPropertyDouble)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, double> map_double = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_double_size());
  {
    ::std::unique_ptr<DBPropertyDouble_MapDoubleEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
        it = this->map_double().begin();
        it != this->map_double().end(); ++it) {
      entry.reset(map_double_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBPropertyDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBObject.DBPropertyDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPropertyDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPropertyDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBObject.DBPropertyDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBObject.DBPropertyDouble)
    MergeFrom(*source);
  }
}

void DBPropertyDouble::MergeFrom(const DBPropertyDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBObject.DBPropertyDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_double_.MergeFrom(from.map_double_);
}

void DBPropertyDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBObject.DBPropertyDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPropertyDouble::CopyFrom(const DBPropertyDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBObject.DBPropertyDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPropertyDouble::IsInitialized() const {
  return true;
}

void DBPropertyDouble::Swap(DBPropertyDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPropertyDouble::InternalSwap(DBPropertyDouble* other) {
  using std::swap;
  map_double_.Swap(&other->map_double_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DBPropertyDouble::GetMetadata() const {
  protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

DBPropertyString_MapStringEntry_DoNotUse::DBPropertyString_MapStringEntry_DoNotUse() {}
DBPropertyString_MapStringEntry_DoNotUse::DBPropertyString_MapStringEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void DBPropertyString_MapStringEntry_DoNotUse::MergeFrom(const DBPropertyString_MapStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DBPropertyString_MapStringEntry_DoNotUse::GetMetadata() const {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[10];
}
void DBPropertyString_MapStringEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void DBPropertyString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPropertyString::kMapStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPropertyString::DBPropertyString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyString.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBObject.DBPropertyString)
}
DBPropertyString::DBPropertyString(const DBPropertyString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_string_.MergeFrom(from.map_string_);
  // @@protoc_insertion_point(copy_constructor:DBObject.DBPropertyString)
}

void DBPropertyString::SharedCtor() {
}

DBPropertyString::~DBPropertyString() {
  // @@protoc_insertion_point(destructor:DBObject.DBPropertyString)
  SharedDtor();
}

void DBPropertyString::SharedDtor() {
}

void DBPropertyString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DBPropertyString::descriptor() {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBPropertyString& DBPropertyString::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5fobject_2eproto::scc_info_DBPropertyString.base);
  return *internal_default_instance();
}


void DBPropertyString::Clear() {
// @@protoc_insertion_point(message_clear_start:DBObject.DBPropertyString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_string_.Clear();
  _internal_metadata_.Clear();
}

bool DBPropertyString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBObject.DBPropertyString)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, string> map_string = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DBPropertyString_MapStringEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DBPropertyString_MapStringEntry_DoNotUse,
              ::google::protobuf::int32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::std::string > > parser(&map_string_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBObject.DBPropertyString.MapStringEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBObject.DBPropertyString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBObject.DBPropertyString)
  return false;
#undef DO_
}

void DBPropertyString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBObject.DBPropertyString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, string> map_string = 1;
  if (!this->map_string().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "DBObject.DBPropertyString.MapStringEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->map_string().begin();
          it != this->map_string().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyString_MapStringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::std::unique_ptr<DBPropertyString_MapStringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->map_string().begin();
          it != this->map_string().end(); ++it) {
        entry.reset(map_string_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBObject.DBPropertyString)
}

::google::protobuf::uint8* DBPropertyString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBObject.DBPropertyString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, string> map_string = 1;
  if (!this->map_string().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "DBObject.DBPropertyString.MapStringEntry.value");
      }
    };

    if (deterministic &&
        this->map_string().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->map_string().begin();
          it != this->map_string().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBPropertyString_MapStringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::std::unique_ptr<DBPropertyString_MapStringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->map_string().begin();
          it != this->map_string().end(); ++it) {
        entry.reset(map_string_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBObject.DBPropertyString)
  return target;
}

size_t DBPropertyString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBObject.DBPropertyString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, string> map_string = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_string_size());
  {
    ::std::unique_ptr<DBPropertyString_MapStringEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->map_string().begin();
        it != this->map_string().end(); ++it) {
      entry.reset(map_string_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBPropertyString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBObject.DBPropertyString)
  GOOGLE_DCHECK_NE(&from, this);
  const DBPropertyString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPropertyString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBObject.DBPropertyString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBObject.DBPropertyString)
    MergeFrom(*source);
  }
}

void DBPropertyString::MergeFrom(const DBPropertyString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBObject.DBPropertyString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_string_.MergeFrom(from.map_string_);
}

void DBPropertyString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBObject.DBPropertyString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPropertyString::CopyFrom(const DBPropertyString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBObject.DBPropertyString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPropertyString::IsInitialized() const {
  return true;
}

void DBPropertyString::Swap(DBPropertyString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPropertyString::InternalSwap(DBPropertyString* other) {
  using std::swap;
  map_string_.Swap(&other->map_string_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DBPropertyString::GetMetadata() const {
  protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBObjectInfo::InitAsDefaultInstance() {
  ::DBObject::_DBObjectInfo_default_instance_._instance.get_mutable()->property_int32_ = const_cast< ::DBObject::DBPropertyInt32*>(
      ::DBObject::DBPropertyInt32::internal_default_instance());
  ::DBObject::_DBObjectInfo_default_instance_._instance.get_mutable()->property_int64_ = const_cast< ::DBObject::DBPropertyInt64*>(
      ::DBObject::DBPropertyInt64::internal_default_instance());
  ::DBObject::_DBObjectInfo_default_instance_._instance.get_mutable()->property_uint64_ = const_cast< ::DBObject::DBPropertyUint64*>(
      ::DBObject::DBPropertyUint64::internal_default_instance());
  ::DBObject::_DBObjectInfo_default_instance_._instance.get_mutable()->property_float_ = const_cast< ::DBObject::DBPropertyFloat*>(
      ::DBObject::DBPropertyFloat::internal_default_instance());
  ::DBObject::_DBObjectInfo_default_instance_._instance.get_mutable()->property_double_ = const_cast< ::DBObject::DBPropertyDouble*>(
      ::DBObject::DBPropertyDouble::internal_default_instance());
  ::DBObject::_DBObjectInfo_default_instance_._instance.get_mutable()->property_string_ = const_cast< ::DBObject::DBPropertyString*>(
      ::DBObject::DBPropertyString::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBObjectInfo::kPropertyInt32FieldNumber;
const int DBObjectInfo::kPropertyInt64FieldNumber;
const int DBObjectInfo::kPropertyUint64FieldNumber;
const int DBObjectInfo::kPropertyFloatFieldNumber;
const int DBObjectInfo::kPropertyDoubleFieldNumber;
const int DBObjectInfo::kPropertyStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBObjectInfo::DBObjectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBObjectInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBObject.DBObjectInfo)
}
DBObjectInfo::DBObjectInfo(const DBObjectInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property_int32()) {
    property_int32_ = new ::DBObject::DBPropertyInt32(*from.property_int32_);
  } else {
    property_int32_ = NULL;
  }
  if (from.has_property_int64()) {
    property_int64_ = new ::DBObject::DBPropertyInt64(*from.property_int64_);
  } else {
    property_int64_ = NULL;
  }
  if (from.has_property_uint64()) {
    property_uint64_ = new ::DBObject::DBPropertyUint64(*from.property_uint64_);
  } else {
    property_uint64_ = NULL;
  }
  if (from.has_property_float()) {
    property_float_ = new ::DBObject::DBPropertyFloat(*from.property_float_);
  } else {
    property_float_ = NULL;
  }
  if (from.has_property_double()) {
    property_double_ = new ::DBObject::DBPropertyDouble(*from.property_double_);
  } else {
    property_double_ = NULL;
  }
  if (from.has_property_string()) {
    property_string_ = new ::DBObject::DBPropertyString(*from.property_string_);
  } else {
    property_string_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:DBObject.DBObjectInfo)
}

void DBObjectInfo::SharedCtor() {
  ::memset(&property_int32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&property_string_) -
      reinterpret_cast<char*>(&property_int32_)) + sizeof(property_string_));
}

DBObjectInfo::~DBObjectInfo() {
  // @@protoc_insertion_point(destructor:DBObject.DBObjectInfo)
  SharedDtor();
}

void DBObjectInfo::SharedDtor() {
  if (this != internal_default_instance()) delete property_int32_;
  if (this != internal_default_instance()) delete property_int64_;
  if (this != internal_default_instance()) delete property_uint64_;
  if (this != internal_default_instance()) delete property_float_;
  if (this != internal_default_instance()) delete property_double_;
  if (this != internal_default_instance()) delete property_string_;
}

void DBObjectInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DBObjectInfo::descriptor() {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBObjectInfo& DBObjectInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5fobject_2eproto::scc_info_DBObjectInfo.base);
  return *internal_default_instance();
}


void DBObjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DBObject.DBObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && property_int32_ != NULL) {
    delete property_int32_;
  }
  property_int32_ = NULL;
  if (GetArenaNoVirtual() == NULL && property_int64_ != NULL) {
    delete property_int64_;
  }
  property_int64_ = NULL;
  if (GetArenaNoVirtual() == NULL && property_uint64_ != NULL) {
    delete property_uint64_;
  }
  property_uint64_ = NULL;
  if (GetArenaNoVirtual() == NULL && property_float_ != NULL) {
    delete property_float_;
  }
  property_float_ = NULL;
  if (GetArenaNoVirtual() == NULL && property_double_ != NULL) {
    delete property_double_;
  }
  property_double_ = NULL;
  if (GetArenaNoVirtual() == NULL && property_string_ != NULL) {
    delete property_string_;
  }
  property_string_ = NULL;
  _internal_metadata_.Clear();
}

bool DBObjectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBObject.DBObjectInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .DBObject.DBPropertyInt32 property_int32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBObject.DBPropertyInt64 property_int64 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBObject.DBPropertyUint64 property_uint64 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBObject.DBPropertyFloat property_float = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBObject.DBPropertyDouble property_double = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBObject.DBPropertyString property_string = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBObject.DBObjectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBObject.DBObjectInfo)
  return false;
#undef DO_
}

void DBObjectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBObject.DBObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .DBObject.DBPropertyInt32 property_int32 = 1;
  if (this->has_property_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_property_int32(), output);
  }

  // .DBObject.DBPropertyInt64 property_int64 = 2;
  if (this->has_property_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_property_int64(), output);
  }

  // .DBObject.DBPropertyUint64 property_uint64 = 3;
  if (this->has_property_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_property_uint64(), output);
  }

  // .DBObject.DBPropertyFloat property_float = 4;
  if (this->has_property_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_property_float(), output);
  }

  // .DBObject.DBPropertyDouble property_double = 5;
  if (this->has_property_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_property_double(), output);
  }

  // .DBObject.DBPropertyString property_string = 6;
  if (this->has_property_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_property_string(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBObject.DBObjectInfo)
}

::google::protobuf::uint8* DBObjectInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBObject.DBObjectInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .DBObject.DBPropertyInt32 property_int32 = 1;
  if (this->has_property_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_property_int32(), deterministic, target);
  }

  // .DBObject.DBPropertyInt64 property_int64 = 2;
  if (this->has_property_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_property_int64(), deterministic, target);
  }

  // .DBObject.DBPropertyUint64 property_uint64 = 3;
  if (this->has_property_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_property_uint64(), deterministic, target);
  }

  // .DBObject.DBPropertyFloat property_float = 4;
  if (this->has_property_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_property_float(), deterministic, target);
  }

  // .DBObject.DBPropertyDouble property_double = 5;
  if (this->has_property_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_property_double(), deterministic, target);
  }

  // .DBObject.DBPropertyString property_string = 6;
  if (this->has_property_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_property_string(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBObject.DBObjectInfo)
  return target;
}

size_t DBObjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBObject.DBObjectInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .DBObject.DBPropertyInt32 property_int32 = 1;
  if (this->has_property_int32()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_int32_);
  }

  // .DBObject.DBPropertyInt64 property_int64 = 2;
  if (this->has_property_int64()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_int64_);
  }

  // .DBObject.DBPropertyUint64 property_uint64 = 3;
  if (this->has_property_uint64()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_uint64_);
  }

  // .DBObject.DBPropertyFloat property_float = 4;
  if (this->has_property_float()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_float_);
  }

  // .DBObject.DBPropertyDouble property_double = 5;
  if (this->has_property_double()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_double_);
  }

  // .DBObject.DBPropertyString property_string = 6;
  if (this->has_property_string()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_string_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBObjectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBObject.DBObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DBObjectInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBObjectInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBObject.DBObjectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBObject.DBObjectInfo)
    MergeFrom(*source);
  }
}

void DBObjectInfo::MergeFrom(const DBObjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBObject.DBObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_property_int32()) {
    mutable_property_int32()->::DBObject::DBPropertyInt32::MergeFrom(from.property_int32());
  }
  if (from.has_property_int64()) {
    mutable_property_int64()->::DBObject::DBPropertyInt64::MergeFrom(from.property_int64());
  }
  if (from.has_property_uint64()) {
    mutable_property_uint64()->::DBObject::DBPropertyUint64::MergeFrom(from.property_uint64());
  }
  if (from.has_property_float()) {
    mutable_property_float()->::DBObject::DBPropertyFloat::MergeFrom(from.property_float());
  }
  if (from.has_property_double()) {
    mutable_property_double()->::DBObject::DBPropertyDouble::MergeFrom(from.property_double());
  }
  if (from.has_property_string()) {
    mutable_property_string()->::DBObject::DBPropertyString::MergeFrom(from.property_string());
  }
}

void DBObjectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBObject.DBObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBObjectInfo::CopyFrom(const DBObjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBObject.DBObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBObjectInfo::IsInitialized() const {
  return true;
}

void DBObjectInfo::Swap(DBObjectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBObjectInfo::InternalSwap(DBObjectInfo* other) {
  using std::swap;
  swap(property_int32_, other->property_int32_);
  swap(property_int64_, other->property_int64_);
  swap(property_uint64_, other->property_uint64_);
  swap(property_float_, other->property_float_);
  swap(property_double_, other->property_double_);
  swap(property_string_, other->property_string_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DBObjectInfo::GetMetadata() const {
  protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBRoleInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBRoleInfo::kRoleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBRoleInfo::DBRoleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBRoleInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBObject.DBRoleInfo)
}
DBRoleInfo::DBRoleInfo(const DBRoleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role_name().size() > 0) {
    role_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_name_);
  }
  // @@protoc_insertion_point(copy_constructor:DBObject.DBRoleInfo)
}

void DBRoleInfo::SharedCtor() {
  role_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DBRoleInfo::~DBRoleInfo() {
  // @@protoc_insertion_point(destructor:DBObject.DBRoleInfo)
  SharedDtor();
}

void DBRoleInfo::SharedDtor() {
  role_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBRoleInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DBRoleInfo::descriptor() {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBRoleInfo& DBRoleInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5fobject_2eproto::scc_info_DBRoleInfo.base);
  return *internal_default_instance();
}


void DBRoleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DBObject.DBRoleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DBRoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBObject.DBRoleInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string role_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role_name().data(), static_cast<int>(this->role_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBObject.DBRoleInfo.role_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBObject.DBRoleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBObject.DBRoleInfo)
  return false;
#undef DO_
}

void DBRoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBObject.DBRoleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role_name = 1;
  if (this->role_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role_name().data(), static_cast<int>(this->role_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBObject.DBRoleInfo.role_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->role_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBObject.DBRoleInfo)
}

::google::protobuf::uint8* DBRoleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBObject.DBRoleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role_name = 1;
  if (this->role_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role_name().data(), static_cast<int>(this->role_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBObject.DBRoleInfo.role_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBObject.DBRoleInfo)
  return target;
}

size_t DBRoleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBObject.DBRoleInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string role_name = 1;
  if (this->role_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBRoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBObject.DBRoleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DBRoleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBRoleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBObject.DBRoleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBObject.DBRoleInfo)
    MergeFrom(*source);
  }
}

void DBRoleInfo::MergeFrom(const DBRoleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBObject.DBRoleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.role_name().size() > 0) {

    role_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_name_);
  }
}

void DBRoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBObject.DBRoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBRoleInfo::CopyFrom(const DBRoleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBObject.DBRoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleInfo::IsInitialized() const {
  return true;
}

void DBRoleInfo::Swap(DBRoleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBRoleInfo::InternalSwap(DBRoleInfo* other) {
  using std::swap;
  role_name_.Swap(&other->role_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DBRoleInfo::GetMetadata() const {
  protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

DBRoleList_RoleMapEntry_DoNotUse::DBRoleList_RoleMapEntry_DoNotUse() {}
DBRoleList_RoleMapEntry_DoNotUse::DBRoleList_RoleMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void DBRoleList_RoleMapEntry_DoNotUse::MergeFrom(const DBRoleList_RoleMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DBRoleList_RoleMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[14];
}
void DBRoleList_RoleMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void DBRoleList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBRoleList::kRoleMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBRoleList::DBRoleList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5fobject_2eproto::scc_info_DBRoleList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBObject.DBRoleList)
}
DBRoleList::DBRoleList(const DBRoleList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_map_.MergeFrom(from.role_map_);
  // @@protoc_insertion_point(copy_constructor:DBObject.DBRoleList)
}

void DBRoleList::SharedCtor() {
}

DBRoleList::~DBRoleList() {
  // @@protoc_insertion_point(destructor:DBObject.DBRoleList)
  SharedDtor();
}

void DBRoleList::SharedDtor() {
}

void DBRoleList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DBRoleList::descriptor() {
  ::protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBRoleList& DBRoleList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5fobject_2eproto::scc_info_DBRoleList.base);
  return *internal_default_instance();
}


void DBRoleList::Clear() {
// @@protoc_insertion_point(message_clear_start:DBObject.DBRoleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_map_.Clear();
  _internal_metadata_.Clear();
}

bool DBRoleList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBObject.DBRoleList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .DBObject.DBRoleInfo> role_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DBRoleList_RoleMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DBRoleList_RoleMapEntry_DoNotUse,
              ::std::string, ::DBObject::DBRoleInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo > > parser(&role_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBObject.DBRoleList.RoleMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBObject.DBRoleList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBObject.DBRoleList)
  return false;
#undef DO_
}

void DBRoleList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBObject.DBRoleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .DBObject.DBRoleInfo> role_map = 1;
  if (!this->role_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "DBObject.DBRoleList.RoleMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->role_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->role_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >::const_iterator
          it = this->role_map().begin();
          it != this->role_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBRoleList_RoleMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(role_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<DBRoleList_RoleMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >::const_iterator
          it = this->role_map().begin();
          it != this->role_map().end(); ++it) {
        entry.reset(role_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBObject.DBRoleList)
}

::google::protobuf::uint8* DBRoleList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBObject.DBRoleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .DBObject.DBRoleInfo> role_map = 1;
  if (!this->role_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "DBObject.DBRoleList.RoleMapEntry.key");
      }
    };

    if (deterministic &&
        this->role_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->role_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >::const_iterator
          it = this->role_map().begin();
          it != this->role_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DBRoleList_RoleMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(role_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<DBRoleList_RoleMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >::const_iterator
          it = this->role_map().begin();
          it != this->role_map().end(); ++it) {
        entry.reset(role_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBObject.DBRoleList)
  return target;
}

size_t DBRoleList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBObject.DBRoleList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .DBObject.DBRoleInfo> role_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->role_map_size());
  {
    ::std::unique_ptr<DBRoleList_RoleMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::DBObject::DBRoleInfo >::const_iterator
        it = this->role_map().begin();
        it != this->role_map().end(); ++it) {
      entry.reset(role_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBRoleList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBObject.DBRoleList)
  GOOGLE_DCHECK_NE(&from, this);
  const DBRoleList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBRoleList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBObject.DBRoleList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBObject.DBRoleList)
    MergeFrom(*source);
  }
}

void DBRoleList::MergeFrom(const DBRoleList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBObject.DBRoleList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  role_map_.MergeFrom(from.role_map_);
}

void DBRoleList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBObject.DBRoleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBRoleList::CopyFrom(const DBRoleList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBObject.DBRoleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleList::IsInitialized() const {
  return true;
}

void DBRoleList::Swap(DBRoleList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBRoleList::InternalSwap(DBRoleList* other) {
  using std::swap;
  role_map_.Swap(&other->role_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DBRoleList::GetMetadata() const {
  protobuf_game_5fdb_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace DBObject
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse* Arena::CreateMaybeMessage< ::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyInt32_MapInt32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyInt32* Arena::CreateMaybeMessage< ::DBObject::DBPropertyInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyInt32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse* Arena::CreateMaybeMessage< ::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyInt64_MapInt64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyInt64* Arena::CreateMaybeMessage< ::DBObject::DBPropertyInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyInt64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyUint64_MapUint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyUint64* Arena::CreateMaybeMessage< ::DBObject::DBPropertyUint64 >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyUint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse* Arena::CreateMaybeMessage< ::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyFloat_MapFloatEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyFloat* Arena::CreateMaybeMessage< ::DBObject::DBPropertyFloat >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyFloat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse* Arena::CreateMaybeMessage< ::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyDouble_MapDoubleEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyDouble* Arena::CreateMaybeMessage< ::DBObject::DBPropertyDouble >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyDouble >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyString_MapStringEntry_DoNotUse* Arena::CreateMaybeMessage< ::DBObject::DBPropertyString_MapStringEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyString_MapStringEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBPropertyString* Arena::CreateMaybeMessage< ::DBObject::DBPropertyString >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBPropertyString >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBObjectInfo* Arena::CreateMaybeMessage< ::DBObject::DBObjectInfo >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBObjectInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBRoleInfo* Arena::CreateMaybeMessage< ::DBObject::DBRoleInfo >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBRoleInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBRoleList_RoleMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::DBObject::DBRoleList_RoleMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBRoleList_RoleMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBObject::DBRoleList* Arena::CreateMaybeMessage< ::DBObject::DBRoleList >(Arena* arena) {
  return Arena::CreateInternal< ::DBObject::DBRoleList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
