// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_db_account.proto

#include "game_db_account.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace DBAccount {
class UserAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserAccount>
      _instance;
} _UserAccount_default_instance_;
}  // namespace DBAccount
namespace protobuf_game_5fdb_5faccount_2eproto {
static void InitDefaultsUserAccount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DBAccount::_UserAccount_default_instance_;
    new (ptr) ::DBAccount::UserAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBAccount::UserAccount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserAccount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserAccount}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UserAccount.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, password_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, session_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, register_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, last_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, last_login_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBAccount::UserAccount, is_banned_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DBAccount::UserAccount)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::DBAccount::_UserAccount_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "game_db_account.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025game_db_account.proto\022\tDBAccount\"\350\001\n\013U"
      "serAccount\022\017\n\007user_id\030\001 \001(\t\022\024\n\014account_n"
      "ame\030\002 \001(\t\022\020\n\010password\030\003 \001(\t\022\025\n\rpassword_"
      "hash\030\004 \001(\t\022\023\n\013session_key\030\005 \001(\t\022\t\n\001v\030\006 \001"
      "(\t\022\t\n\001s\030\007 \001(\t\022\025\n\rregister_time\030\010 \001(\t\022\017\n\007"
      "last_ip\030\t \001(\t\022\027\n\017last_login_time\030\n \001(\t\022\n"
      "\n\002os\030\013 \001(\t\022\021\n\tis_banned\030\014 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 277);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_db_account.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_game_5fdb_5faccount_2eproto
namespace DBAccount {

// ===================================================================

void UserAccount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAccount::kUserIdFieldNumber;
const int UserAccount::kAccountNameFieldNumber;
const int UserAccount::kPasswordFieldNumber;
const int UserAccount::kPasswordHashFieldNumber;
const int UserAccount::kSessionKeyFieldNumber;
const int UserAccount::kVFieldNumber;
const int UserAccount::kSFieldNumber;
const int UserAccount::kRegisterTimeFieldNumber;
const int UserAccount::kLastIpFieldNumber;
const int UserAccount::kLastLoginTimeFieldNumber;
const int UserAccount::kOsFieldNumber;
const int UserAccount::kIsBannedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAccount::UserAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_game_5fdb_5faccount_2eproto::scc_info_UserAccount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBAccount.UserAccount)
}
UserAccount::UserAccount(const UserAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_name().size() > 0) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  password_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password_hash().size() > 0) {
    password_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_hash_);
  }
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_key().size() > 0) {
    session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
  }
  v_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.v().size() > 0) {
    v_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.v_);
  }
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.s().size() > 0) {
    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  register_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.register_time().size() > 0) {
    register_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.register_time_);
  }
  last_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_ip().size() > 0) {
    last_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_ip_);
  }
  last_login_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_login_time().size() > 0) {
    last_login_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_login_time_);
  }
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.os().size() > 0) {
    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  is_banned_ = from.is_banned_;
  // @@protoc_insertion_point(copy_constructor:DBAccount.UserAccount)
}

void UserAccount::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  register_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_login_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_banned_ = false;
}

UserAccount::~UserAccount() {
  // @@protoc_insertion_point(destructor:DBAccount.UserAccount)
  SharedDtor();
}

void UserAccount::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  register_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_login_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserAccount::descriptor() {
  ::protobuf_game_5fdb_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5faccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserAccount& UserAccount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_game_5fdb_5faccount_2eproto::scc_info_UserAccount.base);
  return *internal_default_instance();
}


void UserAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:DBAccount.UserAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  register_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_login_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_banned_ = false;
  _internal_metadata_.Clear();
}

bool UserAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBAccount.UserAccount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.account_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password_hash().data(), static_cast<int>(this->password_hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.password_hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_key().data(), static_cast<int>(this->session_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.session_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string v = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_v()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->v().data(), static_cast<int>(this->v().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.v"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string s = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->s().data(), static_cast<int>(this->s().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.s"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string register_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_register_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->register_time().data(), static_cast<int>(this->register_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.register_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_ip = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_ip().data(), static_cast<int>(this->last_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.last_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_login_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_login_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_login_time().data(), static_cast<int>(this->last_login_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.last_login_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string os = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->os().data(), static_cast<int>(this->os().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBAccount.UserAccount.os"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_banned = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBAccount.UserAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBAccount.UserAccount)
  return false;
#undef DO_
}

void UserAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBAccount.UserAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string account_name = 2;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // string password_hash = 4;
  if (this->password_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password_hash().data(), static_cast<int>(this->password_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.password_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password_hash(), output);
  }

  // string session_key = 5;
  if (this->session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_key().data(), static_cast<int>(this->session_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.session_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->session_key(), output);
  }

  // string v = 6;
  if (this->v().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v().data(), static_cast<int>(this->v().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.v");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->v(), output);
  }

  // string s = 7;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), static_cast<int>(this->s().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.s");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->s(), output);
  }

  // string register_time = 8;
  if (this->register_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->register_time().data(), static_cast<int>(this->register_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.register_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->register_time(), output);
  }

  // string last_ip = 9;
  if (this->last_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_ip().data(), static_cast<int>(this->last_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.last_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->last_ip(), output);
  }

  // string last_login_time = 10;
  if (this->last_login_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_login_time().data(), static_cast<int>(this->last_login_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.last_login_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->last_login_time(), output);
  }

  // string os = 11;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->os(), output);
  }

  // bool is_banned = 12;
  if (this->is_banned() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_banned(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBAccount.UserAccount)
}

::google::protobuf::uint8* UserAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBAccount.UserAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string account_name = 2;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // string password_hash = 4;
  if (this->password_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password_hash().data(), static_cast<int>(this->password_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.password_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password_hash(), target);
  }

  // string session_key = 5;
  if (this->session_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_key().data(), static_cast<int>(this->session_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.session_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->session_key(), target);
  }

  // string v = 6;
  if (this->v().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v().data(), static_cast<int>(this->v().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.v");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->v(), target);
  }

  // string s = 7;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), static_cast<int>(this->s().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.s");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->s(), target);
  }

  // string register_time = 8;
  if (this->register_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->register_time().data(), static_cast<int>(this->register_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.register_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->register_time(), target);
  }

  // string last_ip = 9;
  if (this->last_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_ip().data(), static_cast<int>(this->last_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.last_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->last_ip(), target);
  }

  // string last_login_time = 10;
  if (this->last_login_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_login_time().data(), static_cast<int>(this->last_login_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.last_login_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->last_login_time(), target);
  }

  // string os = 11;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBAccount.UserAccount.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->os(), target);
  }

  // bool is_banned = 12;
  if (this->is_banned() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_banned(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBAccount.UserAccount)
  return target;
}

size_t UserAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBAccount.UserAccount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string account_name = 2;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string password_hash = 4;
  if (this->password_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password_hash());
  }

  // string session_key = 5;
  if (this->session_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_key());
  }

  // string v = 6;
  if (this->v().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->v());
  }

  // string s = 7;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s());
  }

  // string register_time = 8;
  if (this->register_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->register_time());
  }

  // string last_ip = 9;
  if (this->last_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_ip());
  }

  // string last_login_time = 10;
  if (this->last_login_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_login_time());
  }

  // string os = 11;
  if (this->os().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->os());
  }

  // bool is_banned = 12;
  if (this->is_banned() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBAccount.UserAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBAccount.UserAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBAccount.UserAccount)
    MergeFrom(*source);
  }
}

void UserAccount::MergeFrom(const UserAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBAccount.UserAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.password_hash().size() > 0) {

    password_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_hash_);
  }
  if (from.session_key().size() > 0) {

    session_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_key_);
  }
  if (from.v().size() > 0) {

    v_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.v_);
  }
  if (from.s().size() > 0) {

    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  if (from.register_time().size() > 0) {

    register_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.register_time_);
  }
  if (from.last_ip().size() > 0) {

    last_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_ip_);
  }
  if (from.last_login_time().size() > 0) {

    last_login_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_login_time_);
  }
  if (from.os().size() > 0) {

    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  if (from.is_banned() != 0) {
    set_is_banned(from.is_banned());
  }
}

void UserAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBAccount.UserAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAccount::CopyFrom(const UserAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBAccount.UserAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAccount::IsInitialized() const {
  return true;
}

void UserAccount::Swap(UserAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserAccount::InternalSwap(UserAccount* other) {
  using std::swap;
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_name_.Swap(&other->account_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_hash_.Swap(&other->password_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_key_.Swap(&other->session_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  v_.Swap(&other->v_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  s_.Swap(&other->s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  register_time_.Swap(&other->register_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_ip_.Swap(&other->last_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_login_time_.Swap(&other->last_login_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_.Swap(&other->os_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_banned_, other->is_banned_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserAccount::GetMetadata() const {
  protobuf_game_5fdb_5faccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fdb_5faccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace DBAccount
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DBAccount::UserAccount* Arena::CreateMaybeMessage< ::DBAccount::UserAccount >(Arena* arena) {
  return Arena::CreateInternal< ::DBAccount::UserAccount >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
